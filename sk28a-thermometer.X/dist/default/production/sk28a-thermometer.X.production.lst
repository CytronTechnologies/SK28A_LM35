

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Apr 11 14:07:49 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1933
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 10 "main.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 10 "main.c"
    51  8007  C9E4               	dw 0xFFFC & 0xFFE7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xF9FF & 0xFFFF & 0xEFFF & 0xD
                                 FFF ;#
    52                           # 11 "main.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 11 "main.c"
    55  8008  DCFF               	dw 0xFFFF & 0xFFFF & 0xFEFF & 0xFDFF & 0xFFFF & 0xDFFF ;#
    56                           	FNCALL	_main,_init
    57                           	FNCALL	_main,_init_adc
    58                           	FNCALL	_main,_LCDInit
    59                           	FNCALL	_main,_LCDCommand
    60                           	FNCALL	_main,_LCDWriteText
    61                           	FNCALL	_main,___lwdiv
    62                           	FNCALL	_main,___lwmod
    63                           	FNCALL	_LCDWriteText,_LCDCommand
    64                           	FNCALL	_LCDWriteText,_LCDWrite
    65                           	FNCALL	_LCDInit,_LCDCommand
    66                           	FNROOT	_main
    67                           	global	_CPSCON0bits
    68                           psect	text218,local,class=CODE,delta=2
    69                           global __ptext218
    70  0000                     __ptext218:
    71  001E                     _CPSCON0bits	set	30
    72                           	global	_PORTA
    73  000C                     _PORTA	set	12
    74                           	global	_PORTB
    75  000D                     _PORTB	set	13
    76                           	global	_CARRY
    77  0018                     _CARRY	set	24
    78                           	global	_GIE
    79  005F                     _GIE	set	95
    80                           	global	_ADRES
    81  009B                     _ADRES	set	155
    82                           	global	_ADCON0
    83  009D                     _ADCON0	set	157
    84                           	global	_ADCON0bits
    85  009D                     _ADCON0bits	set	157
    86                           	global	_ADCON1
    87  009E                     _ADCON1	set	158
    88                           	global	_OSCCONbits
    89  0099                     _OSCCONbits	set	153
    90                           	global	_TRISA
    91  008C                     _TRISA	set	140
    92                           	global	_TRISAbits
    93  008C                     _TRISAbits	set	140
    94                           	global	_TRISB
    95  008D                     _TRISB	set	141
    96                           	global	_APFCONbits
    97  011D                     _APFCONbits	set	285
    98                           	global	_CM1CON0
    99  0111                     _CM1CON0	set	273
   100                           	global	_CM2CON0
   101  0113                     _CM2CON0	set	275
   102                           	global	_FVRCON
   103  0117                     _FVRCON	set	279
   104                           	global	_LATBbits
   105  010D                     _LATBbits	set	269
   106                           	global	_SRCON0bits
   107  011A                     _SRCON0bits	set	282
   108                           	global	_EEADR
   109  0191                     _EEADR	set	401
   110                           	global	_ANSELA
   111  018C                     _ANSELA	set	396
   112                           	global	_ANSELB
   113  018D                     _ANSELB	set	397
   114                           	global	_EECON1
   115  0195                     _EECON1	set	405
   116                           	global	_EECON2
   117  0196                     _EECON2	set	406
   118                           	global	_EEDATA
   119  0193                     _EEDATA	set	403
   120                           	global	_RD
   121  0CA8                     _RD	set	3240
   122                           	global	_WR
   123  0CA9                     _WR	set	3241
   124                           	global	_WREN
   125  0CAA                     _WREN	set	3242
   126                           	global	_LCDCONbits
   127  0791                     _LCDCONbits	set	1937
   128                           	global	_LCDSE0
   129  0798                     _LCDSE0	set	1944
   130                           	global	_LCDSE1
   131  0799                     _LCDSE1	set	1945
   132                           psect	strings,class=STRING,delta=2
   133                           global __pstrings
   134  0005                     __pstrings:
   135                           	global    __stringtab
   136  0005                     __stringtab:
   137  0005  3400               	retlw	0
   138                           psect	strings
   139                           	
   140  0006                     STR_1:	
   141  0006  3454               	retlw	84	;'T'
   142  0007  3465               	retlw	101	;'e'
   143  0008  346D               	retlw	109	;'m'
   144  0009  3470               	retlw	112	;'p'
   145  000A  3472               	retlw	114	;'r'
   146  000B  343A               	retlw	58	;':'
   147  000C  3400               	retlw	0
   148                           psect	strings
   149                           	file	"C:\Users\NGYONG~1\AppData\Local\Temp\s144."
   150                           	line	#
   151                           psect cinit,class=CODE,delta=2
   152                           global start_initialization
   153  0497                     start_initialization:
   154                           
   155                           psect cinit,class=CODE,delta=2
   156                           global end_of_initialization
   157                           
   158                           ;End of C runtime variable initialization code
   159                           
   160  0497                     end_of_initialization:
   161  0497  0020               movlb 0
   162  0498  3187  2F00         ljmp _main	;jump to C main() function
   163                           psect	cstackCOMMON,class=COMMON,space=1
   164                           global __pcstackCOMMON
   165  0070                     __pcstackCOMMON:
   166                           	global	?_LCDInit
   167  0070                     ?_LCDInit:	; 0 bytes @ 0x0
   168                           	global	?_LCDCommand
   169  0070                     ?_LCDCommand:	; 0 bytes @ 0x0
   170                           	global	??_LCDCommand
   171  0070                     ??_LCDCommand:	; 0 bytes @ 0x0
   172                           	global	?_init
   173  0070                     ?_init:	; 0 bytes @ 0x0
   174                           	global	??_init
   175  0070                     ??_init:	; 0 bytes @ 0x0
   176                           	global	?_init_adc
   177  0070                     ?_init_adc:	; 0 bytes @ 0x0
   178                           	global	??_init_adc
   179  0070                     ??_init_adc:	; 0 bytes @ 0x0
   180                           	global	?_main
   181  0070                     ?_main:	; 0 bytes @ 0x0
   182                           	global	?_LCDWrite
   183  0070                     ?_LCDWrite:	; 0 bytes @ 0x0
   184                           	global	??_LCDWrite
   185  0070                     ??_LCDWrite:	; 0 bytes @ 0x0
   186                           	global	?___lwdiv
   187  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   188                           	global	___lwdiv@divisor
   189  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   190  0070                     	ds	2
   191                           	global	LCDCommand@command
   192  0072                     LCDCommand@command:	; 1 bytes @ 0x2
   193                           	global	LCDWrite@inputChr
   194  0072                     LCDWrite@inputChr:	; 1 bytes @ 0x2
   195                           	global	___lwdiv@dividend
   196  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   197  0072                     	ds	1
   198                           	global	??_LCDInit
   199  0073                     ??_LCDInit:	; 0 bytes @ 0x3
   200                           	global	?_LCDWriteText
   201  0073                     ?_LCDWriteText:	; 0 bytes @ 0x3
   202                           	global	LCDWriteText@text
   203  0073                     LCDWriteText@text:	; 2 bytes @ 0x3
   204  0073                     	ds	1
   205                           	global	??___lwdiv
   206  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   207  0074                     	ds	1
   208                           	global	LCDWriteText@row
   209  0075                     LCDWriteText@row:	; 1 bytes @ 0x5
   210                           	global	___lwdiv@quotient
   211  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   212  0075                     	ds	1
   213                           	global	LCDWriteText@col
   214  0076                     LCDWriteText@col:	; 1 bytes @ 0x6
   215  0076                     	ds	1
   216                           	global	??_LCDWriteText
   217  0077                     ??_LCDWriteText:	; 0 bytes @ 0x7
   218                           	global	___lwdiv@counter
   219  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   220  0077                     	ds	1
   221                           	global	?___lwmod
   222  0078                     ?___lwmod:	; 2 bytes @ 0x8
   223                           	global	LCDWriteText@address_d
   224  0078                     LCDWriteText@address_d:	; 1 bytes @ 0x8
   225                           	global	___lwmod@divisor
   226  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   227  0078                     	ds	2
   228                           	global	___lwmod@dividend
   229  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   230  007A                     	ds	2
   231                           	global	??___lwmod
   232  007C                     ??___lwmod:	; 0 bytes @ 0xC
   233  007C                     	ds	1
   234                           	global	___lwmod@counter
   235  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   236  007D                     	ds	1
   237                           psect	cstackBANK0,class=BANK0,space=1
   238                           global __pcstackBANK0
   239  0020                     __pcstackBANK0:
   240                           	global	??_main
   241  0020                     ??_main:	; 0 bytes @ 0x0
   242  0020                     	ds	3
   243                           	global	main@ADCresultDec
   244  0023                     main@ADCresultDec:	; 1 bytes @ 0x3
   245  0023                     	ds	1
   246                           	global	main@tempText
   247  0024                     main@tempText:	; 9 bytes @ 0x4
   248  0024                     	ds	9
   249                           	global	main@ADCresult
   250  002D                     main@ADCresult:	; 2 bytes @ 0xD
   251  002D                     	ds	2
   252 ;;Data sizes: Strings 7, constant 0, data 0, bss 0, persistent 0 stack 0
   253 ;;Auto spaces:   Size  Autos    Used
   254 ;; COMMON          14     14      14
   255 ;; BANK0           80     15      15
   256 ;; BANK1           80      0       0
   257 ;; BANK2           80      0       0
   258                           
   259 ;;
   260 ;; Pointer list with targets:
   261                           
   262 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   263 ;;
   264 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   265 ;;
   266 ;; LCDWriteText@text	PTR const unsigned char  size(2) Largest target is 9
   267 ;;		 -> main@tempText(BANK0[9]), STR_1(CODE[7]), 
   268 ;;
   269                           
   270                           
   271 ;;
   272 ;; Critical Paths under _main in COMMON
   273 ;;
   274 ;;   _main->___lwmod
   275 ;;   _LCDWriteText->_LCDCommand
   276 ;;   _LCDWriteText->_LCDWrite
   277 ;;   _LCDInit->_LCDCommand
   278 ;;   ___lwmod->___lwdiv
   279 ;;
   280 ;; Critical Paths under _main in BANK0
   281 ;;
   282 ;;   None.
   283 ;;
   284 ;; Critical Paths under _main in BANK1
   285 ;;
   286 ;;   None.
   287 ;;
   288 ;; Critical Paths under _main in BANK2
   289 ;;
   290 ;;   None.
   291                           
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   294 ;;
   295                           
   296 ;;
   297 ;;Call Graph Tables:
   298 ;;
   299 ;; ---------------------------------------------------------------------------------
   300 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   301 ;; ---------------------------------------------------------------------------------
   302 ;; (0) _main                                                15    15      0    1583
   303 ;;                                              0 BANK0     15    15      0
   304 ;;                               _init
   305 ;;                           _init_adc
   306 ;;                            _LCDInit
   307 ;;                         _LCDCommand
   308 ;;                       _LCDWriteText
   309 ;;                            ___lwdiv
   310 ;;                            ___lwmod
   311 ;; ---------------------------------------------------------------------------------
   312 ;; (1) _LCDWriteText                                         6     2      4     511
   313 ;;                                              3 COMMON     6     2      4
   314 ;;                         _LCDCommand
   315 ;;                           _LCDWrite
   316 ;; ---------------------------------------------------------------------------------
   317 ;; (1) _LCDInit                                              2     2      0     176
   318 ;;                                              3 COMMON     2     2      0
   319 ;;                         _LCDCommand
   320 ;; ---------------------------------------------------------------------------------
   321 ;; (2) _LCDWrite                                             3     3      0     176
   322 ;;                                              0 COMMON     3     3      0
   323 ;; ---------------------------------------------------------------------------------
   324 ;; (2) _LCDCommand                                           3     3      0     176
   325 ;;                                              0 COMMON     3     3      0
   326 ;; ---------------------------------------------------------------------------------
   327 ;; (1) ___lwmod                                              6     2      4     159
   328 ;;                                              8 COMMON     6     2      4
   329 ;;                            ___lwdiv (ARG)
   330 ;; ---------------------------------------------------------------------------------
   331 ;; (1) ___lwdiv                                              8     4      4     162
   332 ;;                                              0 COMMON     8     4      4
   333 ;; ---------------------------------------------------------------------------------
   334 ;; (1) _init_adc                                             0     0      0       0
   335 ;; ---------------------------------------------------------------------------------
   336 ;; (1) _init                                                 0     0      0       0
   337 ;; ---------------------------------------------------------------------------------
   338 ;; Estimated maximum stack depth 2
   339 ;; ---------------------------------------------------------------------------------
   340                           
   341 ;; Call Graph Graphs:
   342                           
   343 ;; _main (ROOT)
   344 ;;   _init
   345 ;;   _init_adc
   346 ;;   _LCDInit
   347 ;;     _LCDCommand
   348 ;;   _LCDCommand
   349 ;;   _LCDWriteText
   350 ;;     _LCDCommand
   351 ;;     _LCDWrite
   352 ;;   ___lwdiv
   353 ;;   ___lwmod
   354 ;;     ___lwdiv (ARG)
   355 ;;
   356                           
   357 ;; Address spaces:
   358                           
   359 ;;Name               Size   Autos  Total    Cost      Usage
   360 ;;BIGRAM              F0      0       0       0        0.0%
   361 ;;EEDATA             100      0       0       0        0.0%
   362 ;;NULL                 0      0       0       0        0.0%
   363 ;;CODE                 0      0       0       0        0.0%
   364 ;;BITCOMMON            E      0       0       1        0.0%
   365 ;;BITSFR0              0      0       0       1        0.0%
   366 ;;SFR0                 0      0       0       1        0.0%
   367 ;;COMMON               E      E       E       2      100.0%
   368 ;;BITSFR1              0      0       0       2        0.0%
   369 ;;SFR1                 0      0       0       2        0.0%
   370 ;;BITSFR2              0      0       0       3        0.0%
   371 ;;SFR2                 0      0       0       3        0.0%
   372 ;;STACK                0      0       2       3        0.0%
   373 ;;BITSFR3              0      0       0       4        0.0%
   374 ;;SFR3                 0      0       0       4        0.0%
   375 ;;ABS                  0      0       0       4        0.0%
   376 ;;BITBANK0            50      0       0       5        0.0%
   377 ;;BITSFR4              0      0       0       5        0.0%
   378 ;;SFR4                 0      0       0       5        0.0%
   379 ;;BANK0               50      F       F       6       18.8%
   380 ;;BITSFR5              0      0       0       6        0.0%
   381 ;;SFR5                 0      0       0       6        0.0%
   382 ;;BITBANK1            50      0       0       7        0.0%
   383 ;;BITSFR6              0      0       0       7        0.0%
   384 ;;SFR6                 0      0       0       7        0.0%
   385 ;;BANK1               50      0       0       8        0.0%
   386 ;;BITSFR7              0      0       0       8        0.0%
   387 ;;SFR7                 0      0       0       8        0.0%
   388 ;;BITBANK2            50      0       0       9        0.0%
   389 ;;BITSFR8              0      0       0       9        0.0%
   390 ;;SFR8                 0      0       0       9        0.0%
   391 ;;BANK2               50      0       0      10        0.0%
   392 ;;BITSFR9              0      0       0      10        0.0%
   393 ;;SFR9                 0      0       0      10        0.0%
   394 ;;BITSFR10             0      0       0      11        0.0%
   395 ;;SFR10                0      0       0      11        0.0%
   396 ;;DATA                 0      0       0      11        0.0%
   397 ;;BITSFR11             0      0       0      12        0.0%
   398 ;;SFR11                0      0       0      12        0.0%
   399 ;;BITSFR12             0      0       0      13        0.0%
   400 ;;SFR12                0      0       0      13        0.0%
   401 ;;BITSFR13             0      0       0      14        0.0%
   402 ;;SFR13                0      0       0      14        0.0%
   403 ;;BITSFR14             0      0       0      15        0.0%
   404 ;;SFR14                0      0       0      15        0.0%
   405 ;;BITSFR15             0      0       0      16        0.0%
   406 ;;SFR15                0      0       0      16        0.0%
   407 ;;BITSFR16             0      0       0      17        0.0%
   408 ;;SFR16                0      0       0      17        0.0%
   409 ;;BITSFR17             0      0       0      18        0.0%
   410 ;;SFR17                0      0       0      18        0.0%
   411 ;;BITSFR18             0      0       0      19        0.0%
   412 ;;SFR18                0      0       0      19        0.0%
   413 ;;BITSFR19             0      0       0      20        0.0%
   414 ;;SFR19                0      0       0      20        0.0%
   415 ;;BITSFR20             0      0       0      21        0.0%
   416 ;;SFR20                0      0       0      21        0.0%
   417 ;;BITSFR21             0      0       0      22        0.0%
   418 ;;SFR21                0      0       0      22        0.0%
   419 ;;BITSFR22             0      0       0      23        0.0%
   420 ;;SFR22                0      0       0      23        0.0%
   421 ;;BITSFR23             0      0       0      24        0.0%
   422 ;;SFR23                0      0       0      24        0.0%
   423 ;;BITSFR24             0      0       0      25        0.0%
   424 ;;SFR24                0      0       0      25        0.0%
   425 ;;BITSFR25             0      0       0      26        0.0%
   426 ;;SFR25                0      0       0      26        0.0%
   427 ;;BITSFR26             0      0       0      27        0.0%
   428 ;;SFR26                0      0       0      27        0.0%
   429 ;;BITSFR27             0      0       0      28        0.0%
   430 ;;SFR27                0      0       0      28        0.0%
   431 ;;BITSFR28             0      0       0      29        0.0%
   432 ;;SFR28                0      0       0      29        0.0%
   433 ;;BITSFR29             0      0       0      30        0.0%
   434 ;;SFR29                0      0       0      30        0.0%
   435 ;;BITSFR30             0      0       0      31        0.0%
   436 ;;SFR30                0      0       0      31        0.0%
   437 ;;BITSFR31             0      0       0      32        0.0%
   438 ;;SFR31                0      0       0      32        0.0%
   439                           
   440                           	global	_main
   441                           psect	maintext,global,class=CODE,delta=2
   442                           global __pmaintext
   443  0700                     __pmaintext:
   444                           
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 98 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  tempText        9    4[BANK0 ] unsigned char [9]
   452 ;;  ADCresult       2   13[BANK0 ] unsigned int 
   453 ;;  ADCresultDec    1    3[BANK0 ] unsigned char 
   454 ;; Return value:  Size  Location     Type
   455 ;;		None               void
   456 ;; Registers used:
   457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 17F/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   463 ;;      Params:         0       0       0       0
   464 ;;      Locals:         0      12       0       0
   465 ;;      Temps:          0       3       0       0
   466 ;;      Totals:         0      15       0       0
   467 ;;Total ram usage:       15 bytes
   468 ;; Hardware stack levels required when called:    2
   469 ;; This function calls:
   470 ;;		_init
   471 ;;		_init_adc
   472 ;;		_LCDInit
   473 ;;		_LCDCommand
   474 ;;		_LCDWriteText
   475 ;;		___lwdiv
   476 ;;		___lwmod
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           psect	maintext
   482                           	file	"main.c"
   483                           	line	98
   484                           	global	__size_of_main
   485  0100                     	__size_of_main	equ	__end_of_main-_main
   486                           	
   487  0700                     _main:	
   488                           	opt	stack 14
   489                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   490                           	line	102
   491                           	
   492  0700                     l7084:	
   493                           ;main.c: 99: unsigned int ADCresult;
   494                           ;main.c: 100: unsigned char ADCresultDec;
   495                           ;main.c: 101: unsigned char tempText[9];
   496                           ;main.c: 102: init();
   497  0700  3184  24AA  3187   	fcall	_init
   498                           	line	103
   499                           	
   500  0703                     l7086:	
   501                           ;main.c: 103: _delay((unsigned long)((5)*(1000000/4000.0)));
   502                           	opt asmopt_off
   503  0703  30F9               movlw	249
   504  0704  0020               	movlb 0	; select bank0
   505  0705  00A0               movwf	(??_main+0)+0,f
   506  0706                     u2607:
   507  0706  2F07               	nop2
   508  0707  0BA0               decfsz	(??_main+0)+0,f
   509  0708  2F06               	goto	u2607
   510  0709  2F0A               	nop2	;nop
   511  070A  2F0B               	nop2	;nop
   512                           opt asmopt_on
   513                           
   514                           	line	104
   515                           ;main.c: 104: init_adc();
   516  070B  3184  249A  3187   	fcall	_init_adc
   517                           	line	105
   518                           	
   519  070E                     l7088:	
   520                           ;main.c: 105: _delay((unsigned long)((5)*(1000000/4000.0)));
   521                           	opt asmopt_off
   522  070E  30F9               movlw	249
   523  070F  0020               	movlb 0	; select bank0
   524  0710  00A0               movwf	(??_main+0)+0,f
   525  0711                     u2617:
   526  0711  2F12               	nop2
   527  0712  0BA0               decfsz	(??_main+0)+0,f
   528  0713  2F11               	goto	u2617
   529  0714  2F15               	nop2	;nop
   530  0715  2F16               	nop2	;nop
   531                           opt asmopt_on
   532                           
   533                           	line	106
   534                           	
   535  0716                     l7090:	
   536                           ;main.c: 106: LCDInit();
   537  0716  3184  24FF  3187   	fcall	_LCDInit
   538                           	line	107
   539                           	
   540  0719                     l7092:	
   541                           ;main.c: 107: LCDCommand(0b00001100);
   542  0719  300C               	movlw	(0Ch)
   543  071A  3185  25C0  3187   	fcall	_LCDCommand
   544                           	line	108
   545                           	
   546  071D                     l7094:	
   547                           ;main.c: 108: LCDWriteText("Tempr:",0, 0);
   548  071D  3006               	movlw	low(STR_1|8000h)
   549  071E  00F3               	movwf	(?_LCDWriteText)
   550  071F  3080               	movlw	high(STR_1|8000h)
   551  0720  00F4               	movwf	(?_LCDWriteText+1)
   552  0721  01F5               	clrf	0+(?_LCDWriteText)+02h
   553  0722  01F6               	clrf	0+(?_LCDWriteText)+03h
   554  0723  3184  24C5  3187   	fcall	_LCDWriteText
   555  0726  2F27               	goto	l7096
   556                           	line	109
   557                           ;main.c: 109: while(1)
   558                           	
   559  0727                     l1825:	
   560                           	line	111
   561                           	
   562  0727                     l7096:	
   563                           ;main.c: 110: {
   564                           ;main.c: 111: ADCON0bits.GO = 1;
   565  0727  0021               	movlb 1	; select bank1
   566  0728  149D               	bsf	(157)^080h,1	;volatile
   567                           	line	112
   568                           ;main.c: 112: while(ADCON0bits.GO);
   569  0729  2F2A               	goto	l1826
   570                           	
   571  072A                     l1827:	
   572                           	
   573  072A                     l1826:	
   574  072A  189D               	btfsc	(157)^080h,1	;volatile
   575  072B  2F2D               	goto	u2571
   576  072C  2F2E               	goto	u2570
   577  072D                     u2571:
   578  072D  2F2A               	goto	l1826
   579  072E                     u2570:
   580  072E  2F2F               	goto	l7098
   581                           	
   582  072F                     l1828:	
   583                           	line	114
   584                           	
   585  072F                     l7098:	
   586                           ;main.c: 114: ADCresult = ADRES / 10;
   587  072F  300A               	movlw	low(0Ah)
   588  0730  00F0               	movwf	(?___lwdiv)
   589  0731  3000               	movlw	high(0Ah)
   590  0732  00F1               	movwf	((?___lwdiv))+1
   591  0733  081C               	movf	(155+1)^080h,w	;volatile
   592  0734  01F3               	clrf	1+(?___lwdiv)+02h
   593  0735  07F3               	addwf	1+(?___lwdiv)+02h
   594  0736  081B               	movf	(155)^080h,w	;volatile
   595  0737  01F2               	clrf	0+(?___lwdiv)+02h
   596  0738  07F2               	addwf	0+(?___lwdiv)+02h
   597                           
   598  0739  3185  257A  3187   	fcall	___lwdiv
   599  073C  0871               	movf	(1+(?___lwdiv)),w
   600  073D  0020               	movlb 0	; select bank0
   601  073E  01AE               	clrf	(main@ADCresult+1)
   602  073F  07AE               	addwf	(main@ADCresult+1)
   603  0740  0870               	movf	(0+(?___lwdiv)),w
   604  0741  01AD               	clrf	(main@ADCresult)
   605  0742  07AD               	addwf	(main@ADCresult)
   606                           
   607                           	line	115
   608                           ;main.c: 115: ADCresultDec = ADRES % 10;
   609  0743  300A               	movlw	low(0Ah)
   610  0744  00F8               	movwf	(?___lwmod)
   611  0745  3000               	movlw	high(0Ah)
   612  0746  00F9               	movwf	((?___lwmod))+1
   613  0747  0021               	movlb 1	; select bank1
   614  0748  081C               	movf	(155+1)^080h,w	;volatile
   615  0749  01FB               	clrf	1+(?___lwmod)+02h
   616  074A  07FB               	addwf	1+(?___lwmod)+02h
   617  074B  081B               	movf	(155)^080h,w	;volatile
   618  074C  01FA               	clrf	0+(?___lwmod)+02h
   619  074D  07FA               	addwf	0+(?___lwmod)+02h
   620                           
   621  074E  3185  253C  3187   	fcall	___lwmod
   622  0751  0878               	movf	(0+(?___lwmod)),w
   623  0752  0020               	movlb 0	; select bank0
   624  0753  00A0               	movwf	(??_main+0)+0
   625  0754  0820               	movf	(??_main+0)+0,w
   626  0755  00A3               	movwf	(main@ADCresultDec)
   627                           	line	117
   628                           ;main.c: 117: tempText[0] = (ADCresult / 1000) + 0x30;
   629  0756  30E8               	movlw	low(03E8h)
   630  0757  00F0               	movwf	(?___lwdiv)
   631  0758  3003               	movlw	high(03E8h)
   632  0759  00F1               	movwf	((?___lwdiv))+1
   633  075A  082E               	movf	(main@ADCresult+1),w
   634  075B  01F3               	clrf	1+(?___lwdiv)+02h
   635  075C  07F3               	addwf	1+(?___lwdiv)+02h
   636  075D  082D               	movf	(main@ADCresult),w
   637  075E  01F2               	clrf	0+(?___lwdiv)+02h
   638  075F  07F2               	addwf	0+(?___lwdiv)+02h
   639                           
   640  0760  3185  257A  3187   	fcall	___lwdiv
   641  0763  0870               	movf	(0+(?___lwdiv)),w
   642  0764  3E30               	addlw	030h
   643  0765  0020               	movlb 0	; select bank0
   644  0766  00A0               	movwf	(??_main+0)+0
   645  0767  0820               	movf	(??_main+0)+0,w
   646  0768  00A4               	movwf	(main@tempText)
   647                           	line	118
   648                           ;main.c: 118: tempText[1] = ((ADCresult / 100) % 10) + 0x30;
   649  0769  300A               	movlw	low(0Ah)
   650  076A  00F8               	movwf	(?___lwmod)
   651  076B  3000               	movlw	high(0Ah)
   652  076C  00F9               	movwf	((?___lwmod))+1
   653  076D  3064               	movlw	low(064h)
   654  076E  00F0               	movwf	(?___lwdiv)
   655  076F  3000               	movlw	high(064h)
   656  0770  00F1               	movwf	((?___lwdiv))+1
   657  0771  082E               	movf	(main@ADCresult+1),w
   658  0772  01F3               	clrf	1+(?___lwdiv)+02h
   659  0773  07F3               	addwf	1+(?___lwdiv)+02h
   660  0774  082D               	movf	(main@ADCresult),w
   661  0775  01F2               	clrf	0+(?___lwdiv)+02h
   662  0776  07F2               	addwf	0+(?___lwdiv)+02h
   663                           
   664  0777  3185  257A  3187   	fcall	___lwdiv
   665  077A  0871               	movf	(1+(?___lwdiv)),w
   666  077B  01FB               	clrf	1+(?___lwmod)+02h
   667  077C  07FB               	addwf	1+(?___lwmod)+02h
   668  077D  0870               	movf	(0+(?___lwdiv)),w
   669  077E  01FA               	clrf	0+(?___lwmod)+02h
   670  077F  07FA               	addwf	0+(?___lwmod)+02h
   671                           
   672  0780  3185  253C  3187   	fcall	___lwmod
   673  0783  0878               	movf	(0+(?___lwmod)),w
   674  0784  3E30               	addlw	030h
   675  0785  0020               	movlb 0	; select bank0
   676  0786  00A0               	movwf	(??_main+0)+0
   677  0787  0820               	movf	(??_main+0)+0,w
   678  0788  00A5               	movwf	0+(main@tempText)+01h
   679                           	line	119
   680                           ;main.c: 119: tempText[2] = ((ADCresult / 10) % 10) + 0x30;
   681  0789  300A               	movlw	low(0Ah)
   682  078A  00F8               	movwf	(?___lwmod)
   683  078B  3000               	movlw	high(0Ah)
   684  078C  00F9               	movwf	((?___lwmod))+1
   685  078D  300A               	movlw	low(0Ah)
   686  078E  00F0               	movwf	(?___lwdiv)
   687  078F  3000               	movlw	high(0Ah)
   688  0790  00F1               	movwf	((?___lwdiv))+1
   689  0791  082E               	movf	(main@ADCresult+1),w
   690  0792  01F3               	clrf	1+(?___lwdiv)+02h
   691  0793  07F3               	addwf	1+(?___lwdiv)+02h
   692  0794  082D               	movf	(main@ADCresult),w
   693  0795  01F2               	clrf	0+(?___lwdiv)+02h
   694  0796  07F2               	addwf	0+(?___lwdiv)+02h
   695                           
   696  0797  3185  257A  3187   	fcall	___lwdiv
   697  079A  0871               	movf	(1+(?___lwdiv)),w
   698  079B  01FB               	clrf	1+(?___lwmod)+02h
   699  079C  07FB               	addwf	1+(?___lwmod)+02h
   700  079D  0870               	movf	(0+(?___lwdiv)),w
   701  079E  01FA               	clrf	0+(?___lwmod)+02h
   702  079F  07FA               	addwf	0+(?___lwmod)+02h
   703                           
   704  07A0  3185  253C  3187   	fcall	___lwmod
   705  07A3  0878               	movf	(0+(?___lwmod)),w
   706  07A4  3E30               	addlw	030h
   707  07A5  0020               	movlb 0	; select bank0
   708  07A6  00A0               	movwf	(??_main+0)+0
   709  07A7  0820               	movf	(??_main+0)+0,w
   710  07A8  00A6               	movwf	0+(main@tempText)+02h
   711                           	line	120
   712                           ;main.c: 120: tempText[3] = ADCresult % 10 + 0x30;
   713  07A9  300A               	movlw	low(0Ah)
   714  07AA  00F8               	movwf	(?___lwmod)
   715  07AB  3000               	movlw	high(0Ah)
   716  07AC  00F9               	movwf	((?___lwmod))+1
   717  07AD  082E               	movf	(main@ADCresult+1),w
   718  07AE  01FB               	clrf	1+(?___lwmod)+02h
   719  07AF  07FB               	addwf	1+(?___lwmod)+02h
   720  07B0  082D               	movf	(main@ADCresult),w
   721  07B1  01FA               	clrf	0+(?___lwmod)+02h
   722  07B2  07FA               	addwf	0+(?___lwmod)+02h
   723                           
   724  07B3  3185  253C  3187   	fcall	___lwmod
   725  07B6  0878               	movf	(0+(?___lwmod)),w
   726  07B7  3E30               	addlw	030h
   727  07B8  0020               	movlb 0	; select bank0
   728  07B9  00A0               	movwf	(??_main+0)+0
   729  07BA  0820               	movf	(??_main+0)+0,w
   730  07BB  00A7               	movwf	0+(main@tempText)+03h
   731                           	line	121
   732                           	
   733  07BC                     l7100:	
   734                           ;main.c: 121: tempText[4] = '.';
   735  07BC  302E               	movlw	(02Eh)
   736  07BD  00A0               	movwf	(??_main+0)+0
   737  07BE  0820               	movf	(??_main+0)+0,w
   738  07BF  00A8               	movwf	0+(main@tempText)+04h
   739                           	line	122
   740                           	
   741  07C0                     l7102:	
   742                           ;main.c: 122: tempText[5] = ADCresultDec + 0x30;
   743  07C0  0823               	movf	(main@ADCresultDec),w
   744  07C1  3E30               	addlw	030h
   745  07C2  00A0               	movwf	(??_main+0)+0
   746  07C3  0820               	movf	(??_main+0)+0,w
   747  07C4  00A9               	movwf	0+(main@tempText)+05h
   748                           	line	123
   749                           	
   750  07C5                     l7104:	
   751                           ;main.c: 123: tempText[6] = 223;
   752  07C5  30DF               	movlw	(0DFh)
   753  07C6  00A0               	movwf	(??_main+0)+0
   754  07C7  0820               	movf	(??_main+0)+0,w
   755  07C8  00AA               	movwf	0+(main@tempText)+06h
   756                           	line	124
   757                           	
   758  07C9                     l7106:	
   759                           ;main.c: 124: tempText[7] = 'C';
   760  07C9  3043               	movlw	(043h)
   761  07CA  00A0               	movwf	(??_main+0)+0
   762  07CB  0820               	movf	(??_main+0)+0,w
   763  07CC  00AB               	movwf	0+(main@tempText)+07h
   764                           	line	125
   765                           	
   766  07CD                     l7108:	
   767                           ;main.c: 125: tempText[8] = '\0';
   768  07CD  01AC               	clrf	0+(main@tempText)+08h
   769                           	line	127
   770                           	
   771  07CE                     l7110:	
   772                           ;main.c: 127: if (tempText[0] == '0')
   773  07CE  0824               	movf	(main@tempText),w
   774  07CF  3A30               	xorlw	030h&0ffh
   775  07D0  1D03               	skipz
   776  07D1  2FD3               	goto	u2581
   777  07D2  2FD4               	goto	u2580
   778  07D3                     u2581:
   779  07D3  2FD8               	goto	l1829
   780  07D4                     u2580:
   781                           	line	128
   782                           	
   783  07D4                     l7112:	
   784                           ;main.c: 128: tempText[0] = ' ';
   785  07D4  3020               	movlw	(020h)
   786  07D5  00A0               	movwf	(??_main+0)+0
   787  07D6  0820               	movf	(??_main+0)+0,w
   788  07D7  00A4               	movwf	(main@tempText)
   789                           	
   790  07D8                     l1829:	
   791                           	line	129
   792                           ;main.c: 129: if (tempText[1] == '0')
   793  07D8  0825               	movf	0+(main@tempText)+01h,w
   794  07D9  3A30               	xorlw	030h&0ffh
   795  07DA  1D03               	skipz
   796  07DB  2FDD               	goto	u2591
   797  07DC  2FDE               	goto	u2590
   798  07DD                     u2591:
   799  07DD  2FE3               	goto	l7116
   800  07DE                     u2590:
   801                           	line	130
   802                           	
   803  07DE                     l7114:	
   804                           ;main.c: 130: tempText[1] = ' ';
   805  07DE  3020               	movlw	(020h)
   806  07DF  00A0               	movwf	(??_main+0)+0
   807  07E0  0820               	movf	(??_main+0)+0,w
   808  07E1  00A5               	movwf	0+(main@tempText)+01h
   809  07E2  2FE3               	goto	l7116
   810                           	
   811  07E3                     l1830:	
   812                           	line	132
   813                           	
   814  07E3                     l7116:	
   815                           ;main.c: 132: LCDWriteText(tempText, 1, 0);
   816  07E3  3024               	movlw	(main@tempText&0ffh)
   817  07E4  00F3               	movwf	(?_LCDWriteText)
   818  07E5  3000               	movlw	0x0/2
   819  07E6  00F4               	movwf	(?_LCDWriteText+1)
   820  07E7  01F5               	clrf	0+(?_LCDWriteText)+02h
   821  07E8  1403               	bsf	status,0
   822  07E9  0DF5               	rlf	0+(?_LCDWriteText)+02h,f
   823  07EA  01F6               	clrf	0+(?_LCDWriteText)+03h
   824  07EB  3184  24C5  3187   	fcall	_LCDWriteText
   825                           	line	134
   826                           	
   827  07EE                     l7118:	
   828                           ;main.c: 134: _delay((unsigned long)((1000)*(1000000/4000.0)));
   829                           	opt asmopt_off
   830  07EE  3002               movlw  2
   831  07EF  0020               	movlb 0	; select bank0
   832  07F0  00A2               movwf	((??_main+0)+0+2),f
   833  07F1  3045               movlw	69
   834  07F2  00A1               movwf	((??_main+0)+0+1),f
   835  07F3  30A9               	movlw	169
   836  07F4  00A0               movwf	((??_main+0)+0),f
   837  07F5                     u2627:
   838  07F5  0BA0               	decfsz	((??_main+0)+0),f
   839  07F6  2FF5               	goto	u2627
   840  07F7  0BA1               	decfsz	((??_main+0)+0+1),f
   841  07F8  2FF5               	goto	u2627
   842  07F9  0BA2               	decfsz	((??_main+0)+0+2),f
   843  07FA  2FF5               	goto	u2627
   844  07FB  2FFC               	nop2
   845                           opt asmopt_on
   846                           
   847  07FC  2F27               	goto	l7096
   848                           	line	135
   849                           	
   850  07FD                     l1831:	
   851                           	line	109
   852  07FD  2F27               	goto	l7096
   853                           	
   854  07FE                     l1832:	
   855                           	line	136
   856                           	
   857  07FE                     l1833:	
   858                           	global	start
   859  07FE  3180  2802         	ljmp	start
   860                           	opt stack 0
   861                           GLOBAL	__end_of_main
   862  0800                     	__end_of_main:
   863 ;; =============== function _main ends ============
   864                           
   865                           	signat	_main,88
   866                           	global	_LCDWriteText
   867                           psect	text219,local,class=CODE,delta=2
   868                           global __ptext219
   869  04C5                     __ptext219:
   870                           
   871 ;; *************** function _LCDWriteText *****************
   872 ;; Defined at:
   873 ;;		line 152 in file "lcd44780.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  text            2    3[COMMON] PTR const unsigned char 
   876 ;;		 -> main@tempText(9), STR_1(7), 
   877 ;;  row             1    5[COMMON] unsigned char 
   878 ;;  col             1    6[COMMON] unsigned char 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  address_d       1    8[COMMON] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;		None               void
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   890 ;;      Params:         4       0       0       0
   891 ;;      Locals:         1       0       0       0
   892 ;;      Temps:          1       0       0       0
   893 ;;      Totals:         6       0       0       0
   894 ;;Total ram usage:        6 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    1
   897 ;; This function calls:
   898 ;;		_LCDCommand
   899 ;;		_LCDWrite
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           psect	text219
   905                           	file	"lcd44780.c"
   906                           	line	152
   907                           	global	__size_of_LCDWriteText
   908  003A                     	__size_of_LCDWriteText	equ	__end_of_LCDWriteText-_LCDWriteText
   909                           	
   910  04C5                     _LCDWriteText:	
   911                           	opt	stack 14
   912                           ; Regs used in _LCDWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   913                           	line	155
   914                           	
   915  04C5                     l7064:	
   916                           ;lcd44780.c: 155: unsigned char address_d = 0;
   917  04C5  01F8               	clrf	(LCDWriteText@address_d)
   918                           	line	156
   919                           ;lcd44780.c: 156: switch (row) {
   920  04C6  2CD8               	goto	l7074
   921                           	line	157
   922                           ;lcd44780.c: 157: case 0: address_d = 0x00 + col;
   923                           	
   924  04C7                     l3656:	
   925                           	
   926  04C7                     l7066:	
   927  04C7  0876               	movf	(LCDWriteText@col),w
   928  04C8  00F7               	movwf	(??_LCDWriteText+0)+0
   929  04C9  0877               	movf	(??_LCDWriteText+0)+0,w
   930  04CA  00F8               	movwf	(LCDWriteText@address_d)
   931                           	line	158
   932                           ;lcd44780.c: 158: break;
   933  04CB  2CE0               	goto	l7076
   934                           	line	159
   935                           ;lcd44780.c: 159: case 1: address_d = 0x40 + col;
   936                           	
   937  04CC                     l3658:	
   938                           	
   939  04CC                     l7068:	
   940  04CC  0876               	movf	(LCDWriteText@col),w
   941  04CD  3E40               	addlw	040h
   942  04CE  00F7               	movwf	(??_LCDWriteText+0)+0
   943  04CF  0877               	movf	(??_LCDWriteText+0)+0,w
   944  04D0  00F8               	movwf	(LCDWriteText@address_d)
   945                           	line	160
   946                           ;lcd44780.c: 160: break;
   947  04D1  2CE0               	goto	l7076
   948                           	line	161
   949                           ;lcd44780.c: 161: default: address_d = 0x00 + col;
   950                           	
   951  04D2                     l3659:	
   952                           	
   953  04D2                     l7070:	
   954  04D2  0876               	movf	(LCDWriteText@col),w
   955  04D3  00F7               	movwf	(??_LCDWriteText+0)+0
   956  04D4  0877               	movf	(??_LCDWriteText+0)+0,w
   957  04D5  00F8               	movwf	(LCDWriteText@address_d)
   958                           	line	162
   959                           ;lcd44780.c: 162: break;
   960  04D6  2CE0               	goto	l7076
   961                           	line	163
   962                           	
   963  04D7                     l7072:	
   964                           ;lcd44780.c: 163: }
   965  04D7  2CE0               	goto	l7076
   966                           	line	156
   967                           	
   968  04D8                     l3655:	
   969                           	
   970  04D8                     l7074:	
   971  04D8  0875               	movf	(LCDWriteText@row),w
   972                           	; Switch size 1, requested type "space"
   973                           ; Number of cases is 2, Range of values is 0 to 1
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte            7     4 (average)
   977                           ; direct_byte           10     6 (fixed)
   978                           ; jumptable            260     6 (fixed)
   979                           ; rangetable             6     4 (fixed)
   980                           ; spacedrange            9     6 (fixed)
   981                           ; locatedrange           2     3 (fixed)
   982                           ;	Chosen strategy is simple_byte
   983                           
   984                           	opt asmopt_off
   985  04D9  3A00               	xorlw	0^0	; case 0
   986  04DA  1903               	skipnz
   987  04DB  2CC7               	goto	l7066
   988  04DC  3A01               	xorlw	1^0	; case 1
   989  04DD  1903               	skipnz
   990  04DE  2CCC               	goto	l7068
   991  04DF  2CD2               	goto	l7070
   992                           	opt asmopt_on
   993                           
   994                           	line	163
   995                           	
   996  04E0                     l3657:	
   997                           	line	165
   998                           	
   999  04E0                     l7076:	
  1000                           ;lcd44780.c: 165: LCDCommand(0b10000000 | address_d);
  1001  04E0  0878               	movf	(LCDWriteText@address_d),w
  1002  04E1  3880               	iorlw	080h
  1003  04E2  3185  25C0  3184   	fcall	_LCDCommand
  1004                           	line	167
  1005                           ;lcd44780.c: 167: while (*text)
  1006  04E5  2CF3               	goto	l7082
  1007                           	
  1008  04E6                     l3661:	
  1009                           	line	168
  1010                           	
  1011  04E6                     l7078:	
  1012                           ;lcd44780.c: 168: LCDWrite(*text++);
  1013  04E6  0873               	movf	(LCDWriteText@text),w
  1014  04E7  0084               	movwf	fsr0l
  1015  04E8  0874               	movf	((LCDWriteText@text+1)),w
  1016  04E9  0085               	movwf	fsr0h
  1017  04EA  0800               	movf	indf0,w ;code access
  1018  04EB  3186  2660  3184   	fcall	_LCDWrite
  1019                           	
  1020  04EE                     l7080:	
  1021  04EE  3001               	movlw	low(01h)
  1022  04EF  07F3               	addwf	(LCDWriteText@text),f
  1023  04F0  3000               	movlw	high(01h)
  1024  04F1  3DF4               	addwfc	(LCDWriteText@text+1),f
  1025  04F2  2CF3               	goto	l7082
  1026                           	
  1027  04F3                     l3660:	
  1028                           	line	167
  1029                           	
  1030  04F3                     l7082:	
  1031  04F3  0873               	movf	(LCDWriteText@text),w
  1032  04F4  0084               	movwf	fsr0l
  1033  04F5  0874               	movf	((LCDWriteText@text+1)),w
  1034  04F6  0085               	movwf	fsr0h
  1035  04F7  0800               	movf	indf0,w ;code access
  1036  04F8  3800               	iorlw	0
  1037  04F9  1D03               	skipz
  1038  04FA  2CFC               	goto	u2561
  1039  04FB  2CFD               	goto	u2560
  1040  04FC                     u2561:
  1041  04FC  2CE6               	goto	l7078
  1042  04FD                     u2560:
  1043  04FD  2CFE               	goto	l3663
  1044                           	
  1045  04FE                     l3662:	
  1046                           	line	169
  1047                           	
  1048  04FE                     l3663:	
  1049  04FE  0008               	return
  1050                           	opt stack 0
  1051                           GLOBAL	__end_of_LCDWriteText
  1052  04FF                     	__end_of_LCDWriteText:
  1053 ;; =============== function _LCDWriteText ends ============
  1054                           
  1055                           	signat	_LCDWriteText,12408
  1056                           	global	_LCDInit
  1057                           psect	text220,local,class=CODE,delta=2
  1058                           global __ptext220
  1059  04FF                     __ptext220:
  1060                           
  1061 ;; *************** function _LCDInit *****************
  1062 ;; Defined at:
  1063 ;;		line 59 in file "lcd44780.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;		None               void
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1077 ;;      Params:         0       0       0       0
  1078 ;;      Locals:         0       0       0       0
  1079 ;;      Temps:          2       0       0       0
  1080 ;;      Totals:         2       0       0       0
  1081 ;;Total ram usage:        2 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    1
  1084 ;; This function calls:
  1085 ;;		_LCDCommand
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           psect	text220
  1091                           	file	"lcd44780.c"
  1092                           	line	59
  1093                           	global	__size_of_LCDInit
  1094  003D                     	__size_of_LCDInit	equ	__end_of_LCDInit-_LCDInit
  1095                           	
  1096  04FF                     _LCDInit:	
  1097                           	opt	stack 14
  1098                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  1099                           	line	65
  1100                           	
  1101  04FF                     l7046:	
  1102                           ;lcd44780.c: 65: _delay((unsigned long)((750)*(1000000/4000.0)));
  1103                           	opt asmopt_off
  1104  04FF  30F4               movlw	244
  1105  0500  00F4               movwf	((??_LCDInit+0)+0+1),f
  1106  0501  3080               	movlw	128
  1107  0502  00F3               movwf	((??_LCDInit+0)+0),f
  1108  0503                     u2637:
  1109  0503  0BF3               	decfsz	((??_LCDInit+0)+0),f
  1110  0504  2D03               	goto	u2637
  1111  0505  0BF4               	decfsz	((??_LCDInit+0)+0+1),f
  1112  0506  2D03               	goto	u2637
  1113  0507  0064               	clrwdt
  1114                           opt asmopt_on
  1115                           
  1116                           	line	67
  1117                           	
  1118  0508                     l7048:	
  1119                           ;lcd44780.c: 67: LCDCommand(0b00100000);
  1120  0508  3020               	movlw	(020h)
  1121  0509  3185  25C0  3184   	fcall	_LCDCommand
  1122                           	line	69
  1123                           	
  1124  050C                     l7050:	
  1125                           ;lcd44780.c: 69: _delay((unsigned long)((1)*(1000000/4000.0)));
  1126                           	opt asmopt_off
  1127  050C  3053               movlw	83
  1128  050D  00F3               movwf	(??_LCDInit+0)+0,f
  1129  050E                     u2647:
  1130  050E  0BF3               decfsz	(??_LCDInit+0)+0,f
  1131  050F  2D0E               	goto	u2647
  1132                           opt asmopt_on
  1133                           
  1134                           	line	71
  1135                           ;lcd44780.c: 71: LCDCommand(0b00100000);
  1136  0510  3020               	movlw	(020h)
  1137  0511  3185  25C0  3184   	fcall	_LCDCommand
  1138                           	line	73
  1139                           	
  1140  0514                     l7052:	
  1141                           ;lcd44780.c: 73: _delay((unsigned long)((1)*(1000000/4000.0)));
  1142                           	opt asmopt_off
  1143  0514  3053               movlw	83
  1144  0515  00F3               movwf	(??_LCDInit+0)+0,f
  1145  0516                     u2657:
  1146  0516  0BF3               decfsz	(??_LCDInit+0)+0,f
  1147  0517  2D16               	goto	u2657
  1148                           opt asmopt_on
  1149                           
  1150                           	line	75
  1151                           	
  1152  0518                     l7054:	
  1153                           ;lcd44780.c: 75: LCDCommand(0b00100000);
  1154  0518  3020               	movlw	(020h)
  1155  0519  3185  25C0  3184   	fcall	_LCDCommand
  1156                           	line	77
  1157                           ;lcd44780.c: 77: _delay((unsigned long)((1)*(1000000/4000.0)));
  1158                           	opt asmopt_off
  1159  051C  3053               movlw	83
  1160  051D  00F3               movwf	(??_LCDInit+0)+0,f
  1161  051E                     u2667:
  1162  051E  0BF3               decfsz	(??_LCDInit+0)+0,f
  1163  051F  2D1E               	goto	u2667
  1164                           opt asmopt_on
  1165                           
  1166                           	line	79
  1167                           	
  1168  0520                     l7056:	
  1169                           ;lcd44780.c: 79: LCDCommand(0b00101100);
  1170  0520  302C               	movlw	(02Ch)
  1171  0521  3185  25C0  3184   	fcall	_LCDCommand
  1172                           	line	81
  1173                           	
  1174  0524                     l7058:	
  1175                           ;lcd44780.c: 81: _delay((unsigned long)((1)*(1000000/4000.0)));
  1176                           	opt asmopt_off
  1177  0524  3053               movlw	83
  1178  0525  00F3               movwf	(??_LCDInit+0)+0,f
  1179  0526                     u2677:
  1180  0526  0BF3               decfsz	(??_LCDInit+0)+0,f
  1181  0527  2D26               	goto	u2677
  1182                           opt asmopt_on
  1183                           
  1184                           	line	83
  1185                           ;lcd44780.c: 83: LCDCommand(0b00001111);
  1186  0528  300F               	movlw	(0Fh)
  1187  0529  3185  25C0  3184   	fcall	_LCDCommand
  1188                           	line	85
  1189                           	
  1190  052C                     l7060:	
  1191                           ;lcd44780.c: 85: _delay((unsigned long)((1)*(1000000/4000.0)));
  1192                           	opt asmopt_off
  1193  052C  3053               movlw	83
  1194  052D  00F3               movwf	(??_LCDInit+0)+0,f
  1195  052E                     u2687:
  1196  052E  0BF3               decfsz	(??_LCDInit+0)+0,f
  1197  052F  2D2E               	goto	u2687
  1198                           opt asmopt_on
  1199                           
  1200                           	line	87
  1201                           	
  1202  0530                     l7062:	
  1203                           ;lcd44780.c: 87: LCDCommand(0b00000001);
  1204  0530  3001               	movlw	(01h)
  1205  0531  3185  25C0  3184   	fcall	_LCDCommand
  1206                           	line	89
  1207                           ;lcd44780.c: 89: _delay((unsigned long)((5)*(1000000/4000.0)));
  1208                           	opt asmopt_off
  1209  0534  30F9               movlw	249
  1210  0535  00F3               movwf	(??_LCDInit+0)+0,f
  1211  0536                     u2697:
  1212  0536  2D37               	nop2
  1213  0537  0BF3               decfsz	(??_LCDInit+0)+0,f
  1214  0538  2D36               	goto	u2697
  1215  0539  2D3A               	nop2	;nop
  1216  053A  2D3B               	nop2	;nop
  1217                           opt asmopt_on
  1218                           
  1219                           	line	91
  1220                           	
  1221  053B                     l3649:	
  1222  053B  0008               	return
  1223                           	opt stack 0
  1224                           GLOBAL	__end_of_LCDInit
  1225  053C                     	__end_of_LCDInit:
  1226 ;; =============== function _LCDInit ends ============
  1227                           
  1228                           	signat	_LCDInit,88
  1229                           	global	_LCDWrite
  1230                           psect	text221,local,class=CODE,delta=2
  1231                           global __ptext221
  1232  0660                     __ptext221:
  1233                           
  1234 ;; *************** function _LCDWrite *****************
  1235 ;; Defined at:
  1236 ;;		line 106 in file "lcd44780.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  inputChr        1    wreg     unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  inputChr        1    2[COMMON] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;		None               void
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1250 ;;      Params:         0       0       0       0
  1251 ;;      Locals:         1       0       0       0
  1252 ;;      Temps:          2       0       0       0
  1253 ;;      Totals:         3       0       0       0
  1254 ;;Total ram usage:        3 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_LCDWriteText
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           psect	text221
  1263                           	file	"lcd44780.c"
  1264                           	line	106
  1265                           	global	__size_of_LCDWrite
  1266  00A0                     	__size_of_LCDWrite	equ	__end_of_LCDWrite-_LCDWrite
  1267                           	
  1268  0660                     _LCDWrite:	
  1269                           	opt	stack 14
  1270                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
  1271                           ;LCDWrite@inputChr stored from wreg
  1272                           	line	108
  1273  0660  00F2               	movwf	(LCDWrite@inputChr)
  1274                           	
  1275  0661                     l7010:	
  1276                           ;lcd44780.c: 108: LATBbits.LATB2 = 1;
  1277  0661  0022               	movlb 2	; select bank2
  1278  0662  150D               	bsf	(269)^0100h,2	;volatile
  1279                           	line	109
  1280                           ;lcd44780.c: 109: _delay((unsigned long)((5)*(1000000/4000000.0)));
  1281                           		opt asmopt_off
  1282  0663  0064               	clrwdt
  1283                           	opt asmopt_on
  1284                           
  1285                           	line	110
  1286                           	
  1287  0664                     l7012:	
  1288                           ;lcd44780.c: 110: LATBbits.LATB4 = (inputChr & (1 << 4)) >> 4;
  1289  0664  0872               	movf	(LCDWrite@inputChr),w
  1290  0665  00F0               	movwf	(??_LCDWrite+0)+0
  1291  0666  3004               	movlw	04h
  1292  0667                     u2505:
  1293  0667  36F0               	lsrf	(??_LCDWrite+0)+0,f
  1294  0668  0B89               	decfsz	wreg,f
  1295  0669  2E67               	goto	u2505
  1296  066A  0870               	movf	0+(??_LCDWrite+0)+0,w
  1297  066B  3901               	andlw	01h
  1298  066C  00F1               	movwf	(??_LCDWrite+1)+0
  1299  066D  0EF1               	swapf	(??_LCDWrite+1)+0,f
  1300  066E  0022               	movlb 2	; select bank2
  1301  066F  080D               	movf	(269)^0100h,w	;volatile
  1302  0670  0671               	xorwf	(??_LCDWrite+1)+0,w
  1303  0671  39EF               	andlw	not (((1<<1)-1)<<4)
  1304  0672  0671               	xorwf	(??_LCDWrite+1)+0,w
  1305  0673  008D               	movwf	(269)^0100h	;volatile
  1306                           	line	111
  1307                           ;lcd44780.c: 111: LATBbits.LATB5 = (inputChr & (1 << 5)) >> 5;
  1308  0674  0872               	movf	(LCDWrite@inputChr),w
  1309  0675  00F0               	movwf	(??_LCDWrite+0)+0
  1310  0676  3005               	movlw	05h
  1311  0677                     u2515:
  1312  0677  36F0               	lsrf	(??_LCDWrite+0)+0,f
  1313  0678  0B89               	decfsz	wreg,f
  1314  0679  2E77               	goto	u2515
  1315  067A  0870               	movf	0+(??_LCDWrite+0)+0,w
  1316  067B  3901               	andlw	01h
  1317  067C  00F1               	movwf	(??_LCDWrite+1)+0
  1318  067D  0EF1               	swapf	(??_LCDWrite+1)+0,f
  1319  067E  0DF1               	rlf	(??_LCDWrite+1)+0,f
  1320  067F  080D               	movf	(269)^0100h,w	;volatile
  1321  0680  0671               	xorwf	(??_LCDWrite+1)+0,w
  1322  0681  39DF               	andlw	not (((1<<1)-1)<<5)
  1323  0682  0671               	xorwf	(??_LCDWrite+1)+0,w
  1324  0683  008D               	movwf	(269)^0100h	;volatile
  1325                           	line	112
  1326                           ;lcd44780.c: 112: LATBbits.LATB6 = (inputChr & (1 << 6)) >> 6;
  1327  0684  0872               	movf	(LCDWrite@inputChr),w
  1328  0685  00F0               	movwf	(??_LCDWrite+0)+0
  1329  0686  3006               	movlw	06h
  1330  0687                     u2525:
  1331  0687  36F0               	lsrf	(??_LCDWrite+0)+0,f
  1332  0688  0B89               	decfsz	wreg,f
  1333  0689  2E87               	goto	u2525
  1334  068A  0870               	movf	0+(??_LCDWrite+0)+0,w
  1335  068B  3901               	andlw	01h
  1336  068C  00F1               	movwf	(??_LCDWrite+1)+0
  1337  068D  0EF1               	swapf	(??_LCDWrite+1)+0,f
  1338  068E  0DF1               	rlf	(??_LCDWrite+1)+0,f
  1339  068F  0DF1               	rlf	(??_LCDWrite+1)+0,f
  1340  0690  080D               	movf	(269)^0100h,w	;volatile
  1341  0691  0671               	xorwf	(??_LCDWrite+1)+0,w
  1342  0692  39BF               	andlw	not (((1<<1)-1)<<6)
  1343  0693  0671               	xorwf	(??_LCDWrite+1)+0,w
  1344  0694  008D               	movwf	(269)^0100h	;volatile
  1345                           	line	113
  1346                           ;lcd44780.c: 113: LATBbits.LATB7 = (inputChr & (1 << 7)) >> 7;
  1347  0695  0872               	movf	(LCDWrite@inputChr),w
  1348  0696  00F0               	movwf	(??_LCDWrite+0)+0
  1349  0697  3007               	movlw	07h
  1350  0698                     u2535:
  1351  0698  36F0               	lsrf	(??_LCDWrite+0)+0,f
  1352  0699  0B89               	decfsz	wreg,f
  1353  069A  2E98               	goto	u2535
  1354  069B  0870               	movf	0+(??_LCDWrite+0)+0,w
  1355  069C  3901               	andlw	01h
  1356  069D  00F1               	movwf	(??_LCDWrite+1)+0
  1357  069E  0CF1               	rrf	(??_LCDWrite+1)+0,f
  1358  069F  0CF1               	rrf	(??_LCDWrite+1)+0,f
  1359  06A0  080D               	movf	(269)^0100h,w	;volatile
  1360  06A1  0671               	xorwf	(??_LCDWrite+1)+0,w
  1361  06A2  397F               	andlw	not (((1<<1)-1)<<7)
  1362  06A3  0671               	xorwf	(??_LCDWrite+1)+0,w
  1363  06A4  008D               	movwf	(269)^0100h	;volatile
  1364                           	line	114
  1365                           	
  1366  06A5                     l7014:	
  1367                           ;lcd44780.c: 114: LATBbits.LATB3 = 0; _delay((unsigned long)((100)*(1000000/4000000.0)))
                                 ; LATBbits.LATB3 = 1; _delay((unsigned long)((100)*(1000000/4000000.0)));
  1368  06A5  118D               	bcf	(269)^0100h,3	;volatile
  1369                           	
  1370  06A6                     l7016:	
  1371                           	opt asmopt_off
  1372  06A6  3008               movlw	8
  1373  06A7  00F0               movwf	(??_LCDWrite+0)+0,f
  1374  06A8                     u2707:
  1375  06A8  0BF0               decfsz	(??_LCDWrite+0)+0,f
  1376  06A9  2EA8               	goto	u2707
  1377                           opt asmopt_on
  1378                           
  1379                           	
  1380  06AA                     l7018:	
  1381  06AA  0022               	movlb 2	; select bank2
  1382  06AB  158D               	bsf	(269)^0100h,3	;volatile
  1383                           	
  1384  06AC                     l7020:	
  1385                           	opt asmopt_off
  1386  06AC  3008               movlw	8
  1387  06AD  00F0               movwf	(??_LCDWrite+0)+0,f
  1388  06AE                     u2717:
  1389  06AE  0BF0               decfsz	(??_LCDWrite+0)+0,f
  1390  06AF  2EAE               	goto	u2717
  1391                           opt asmopt_on
  1392                           
  1393                           	line	116
  1394                           	
  1395  06B0                     l7022:	
  1396                           ;lcd44780.c: 116: _delay((unsigned long)((100)*(1000000/4000000.0)));
  1397                           	opt asmopt_off
  1398  06B0  3008               movlw	8
  1399  06B1  00F0               movwf	(??_LCDWrite+0)+0,f
  1400  06B2                     u2727:
  1401  06B2  0BF0               decfsz	(??_LCDWrite+0)+0,f
  1402  06B3  2EB2               	goto	u2727
  1403                           opt asmopt_on
  1404                           
  1405                           	line	118
  1406                           	
  1407  06B4                     l7024:	
  1408                           ;lcd44780.c: 118: LATBbits.LATB2 = 1;
  1409  06B4  0022               	movlb 2	; select bank2
  1410  06B5  150D               	bsf	(269)^0100h,2	;volatile
  1411                           	line	119
  1412                           	
  1413  06B6                     l7026:	
  1414                           ;lcd44780.c: 119: _delay((unsigned long)((5)*(1000000/4000000.0)));
  1415                           		opt asmopt_off
  1416  06B6  0064               	clrwdt
  1417                           	opt asmopt_on
  1418                           
  1419                           	line	120
  1420                           	
  1421  06B7                     l7028:	
  1422                           ;lcd44780.c: 120: LATBbits.LATB4 = (inputChr & (1 << 0)) >> 0;
  1423  06B7  0872               	movf	(LCDWrite@inputChr),w
  1424  06B8  3901               	andlw	01h
  1425  06B9  00F0               	movwf	(??_LCDWrite+0)+0
  1426  06BA  0EF0               	swapf	(??_LCDWrite+0)+0,f
  1427  06BB  0022               	movlb 2	; select bank2
  1428  06BC  080D               	movf	(269)^0100h,w	;volatile
  1429  06BD  0670               	xorwf	(??_LCDWrite+0)+0,w
  1430  06BE  39EF               	andlw	not (((1<<1)-1)<<4)
  1431  06BF  0670               	xorwf	(??_LCDWrite+0)+0,w
  1432  06C0  008D               	movwf	(269)^0100h	;volatile
  1433                           	line	121
  1434                           	
  1435  06C1                     l7030:	
  1436                           ;lcd44780.c: 121: LATBbits.LATB5 = (inputChr & (1 << 1)) >> 1;
  1437  06C1  0872               	movf	(LCDWrite@inputChr),w
  1438  06C2  3689               	lsrf	wreg,f
  1439  06C3  3901               	andlw	01h
  1440  06C4  00F0               	movwf	(??_LCDWrite+0)+0
  1441  06C5  0EF0               	swapf	(??_LCDWrite+0)+0,f
  1442  06C6  0DF0               	rlf	(??_LCDWrite+0)+0,f
  1443  06C7  080D               	movf	(269)^0100h,w	;volatile
  1444  06C8  0670               	xorwf	(??_LCDWrite+0)+0,w
  1445  06C9  39DF               	andlw	not (((1<<1)-1)<<5)
  1446  06CA  0670               	xorwf	(??_LCDWrite+0)+0,w
  1447  06CB  008D               	movwf	(269)^0100h	;volatile
  1448                           	line	122
  1449                           	
  1450  06CC                     l7032:	
  1451                           ;lcd44780.c: 122: LATBbits.LATB6 = (inputChr & (1 << 2)) >> 2;
  1452  06CC  0872               	movf	(LCDWrite@inputChr),w
  1453  06CD  00F0               	movwf	(??_LCDWrite+0)+0
  1454  06CE  3002               	movlw	02h
  1455  06CF                     u2545:
  1456  06CF  36F0               	lsrf	(??_LCDWrite+0)+0,f
  1457  06D0  0B89               	decfsz	wreg,f
  1458  06D1  2ECF               	goto	u2545
  1459  06D2  0870               	movf	0+(??_LCDWrite+0)+0,w
  1460  06D3  3901               	andlw	01h
  1461  06D4  00F1               	movwf	(??_LCDWrite+1)+0
  1462  06D5  0EF1               	swapf	(??_LCDWrite+1)+0,f
  1463  06D6  0DF1               	rlf	(??_LCDWrite+1)+0,f
  1464  06D7  0DF1               	rlf	(??_LCDWrite+1)+0,f
  1465  06D8  080D               	movf	(269)^0100h,w	;volatile
  1466  06D9  0671               	xorwf	(??_LCDWrite+1)+0,w
  1467  06DA  39BF               	andlw	not (((1<<1)-1)<<6)
  1468  06DB  0671               	xorwf	(??_LCDWrite+1)+0,w
  1469  06DC  008D               	movwf	(269)^0100h	;volatile
  1470                           	line	123
  1471                           	
  1472  06DD                     l7034:	
  1473                           ;lcd44780.c: 123: LATBbits.LATB7 = (inputChr & (1 << 3)) >> 3;
  1474  06DD  0872               	movf	(LCDWrite@inputChr),w
  1475  06DE  00F0               	movwf	(??_LCDWrite+0)+0
  1476  06DF  3003               	movlw	03h
  1477  06E0                     u2555:
  1478  06E0  36F0               	lsrf	(??_LCDWrite+0)+0,f
  1479  06E1  0B89               	decfsz	wreg,f
  1480  06E2  2EE0               	goto	u2555
  1481  06E3  0870               	movf	0+(??_LCDWrite+0)+0,w
  1482  06E4  3901               	andlw	01h
  1483  06E5  00F1               	movwf	(??_LCDWrite+1)+0
  1484  06E6  0CF1               	rrf	(??_LCDWrite+1)+0,f
  1485  06E7  0CF1               	rrf	(??_LCDWrite+1)+0,f
  1486  06E8  080D               	movf	(269)^0100h,w	;volatile
  1487  06E9  0671               	xorwf	(??_LCDWrite+1)+0,w
  1488  06EA  397F               	andlw	not (((1<<1)-1)<<7)
  1489  06EB  0671               	xorwf	(??_LCDWrite+1)+0,w
  1490  06EC  008D               	movwf	(269)^0100h	;volatile
  1491                           	line	124
  1492                           	
  1493  06ED                     l7036:	
  1494                           ;lcd44780.c: 124: LATBbits.LATB3 = 0; _delay((unsigned long)((100)*(1000000/4000000.0)))
                                 ; LATBbits.LATB3 = 1; _delay((unsigned long)((100)*(1000000/4000000.0)));
  1495  06ED  118D               	bcf	(269)^0100h,3	;volatile
  1496                           	
  1497  06EE                     l7038:	
  1498                           	opt asmopt_off
  1499  06EE  3008               movlw	8
  1500  06EF  00F0               movwf	(??_LCDWrite+0)+0,f
  1501  06F0                     u2737:
  1502  06F0  0BF0               decfsz	(??_LCDWrite+0)+0,f
  1503  06F1  2EF0               	goto	u2737
  1504                           opt asmopt_on
  1505                           
  1506                           	
  1507  06F2                     l7040:	
  1508  06F2  0022               	movlb 2	; select bank2
  1509  06F3  158D               	bsf	(269)^0100h,3	;volatile
  1510                           	
  1511  06F4                     l7042:	
  1512                           	opt asmopt_off
  1513  06F4  3008               movlw	8
  1514  06F5  00F0               movwf	(??_LCDWrite+0)+0,f
  1515  06F6                     u2747:
  1516  06F6  0BF0               decfsz	(??_LCDWrite+0)+0,f
  1517  06F7  2EF6               	goto	u2747
  1518                           opt asmopt_on
  1519                           
  1520                           	line	126
  1521                           	
  1522  06F8                     l7044:	
  1523                           ;lcd44780.c: 126: _delay((unsigned long)((5)*(1000000/4000.0)));
  1524                           	opt asmopt_off
  1525  06F8  30F9               movlw	249
  1526  06F9  00F0               movwf	(??_LCDWrite+0)+0,f
  1527  06FA                     u2757:
  1528  06FA  2EFB               	nop2
  1529  06FB  0BF0               decfsz	(??_LCDWrite+0)+0,f
  1530  06FC  2EFA               	goto	u2757
  1531  06FD  2EFE               	nop2	;nop
  1532  06FE  2EFF               	nop2	;nop
  1533                           opt asmopt_on
  1534                           
  1535                           	line	128
  1536                           	
  1537  06FF                     l3652:	
  1538  06FF  0008               	return
  1539                           	opt stack 0
  1540                           GLOBAL	__end_of_LCDWrite
  1541  0700                     	__end_of_LCDWrite:
  1542 ;; =============== function _LCDWrite ends ============
  1543                           
  1544                           	signat	_LCDWrite,4216
  1545                           	global	_LCDCommand
  1546                           psect	text222,local,class=CODE,delta=2
  1547                           global __ptext222
  1548  05C0                     __ptext222:
  1549                           
  1550 ;; *************** function _LCDCommand *****************
  1551 ;; Defined at:
  1552 ;;		line 19 in file "lcd44780.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  command         1    wreg     unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  command         1    2[COMMON] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;		None               void
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1566 ;;      Params:         0       0       0       0
  1567 ;;      Locals:         1       0       0       0
  1568 ;;      Temps:          2       0       0       0
  1569 ;;      Totals:         3       0       0       0
  1570 ;;Total ram usage:        3 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;;		_LCDInit
  1577 ;;		_LCDWriteText
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           psect	text222
  1581                           	file	"lcd44780.c"
  1582                           	line	19
  1583                           	global	__size_of_LCDCommand
  1584  00A0                     	__size_of_LCDCommand	equ	__end_of_LCDCommand-_LCDCommand
  1585                           	
  1586  05C0                     _LCDCommand:	
  1587                           	opt	stack 14
  1588                           ; Regs used in _LCDCommand: [wreg+status,2+status,0]
  1589                           ;LCDCommand@command stored from wreg
  1590                           	line	21
  1591  05C0  00F2               	movwf	(LCDCommand@command)
  1592                           	
  1593  05C1                     l6974:	
  1594                           ;lcd44780.c: 21: LATBbits.LATB2 = 0;
  1595  05C1  0022               	movlb 2	; select bank2
  1596  05C2  110D               	bcf	(269)^0100h,2	;volatile
  1597                           	line	22
  1598                           ;lcd44780.c: 22: _delay((unsigned long)((5)*(1000000/4000000.0)));
  1599                           		opt asmopt_off
  1600  05C3  0064               	clrwdt
  1601                           	opt asmopt_on
  1602                           
  1603                           	line	24
  1604                           	
  1605  05C4                     l6976:	
  1606                           ;lcd44780.c: 24: LATBbits.LATB4 = (command & (1 << 4)) >> 4;
  1607  05C4  0872               	movf	(LCDCommand@command),w
  1608  05C5  00F0               	movwf	(??_LCDCommand+0)+0
  1609  05C6  3004               	movlw	04h
  1610  05C7                     u2445:
  1611  05C7  36F0               	lsrf	(??_LCDCommand+0)+0,f
  1612  05C8  0B89               	decfsz	wreg,f
  1613  05C9  2DC7               	goto	u2445
  1614  05CA  0870               	movf	0+(??_LCDCommand+0)+0,w
  1615  05CB  3901               	andlw	01h
  1616  05CC  00F1               	movwf	(??_LCDCommand+1)+0
  1617  05CD  0EF1               	swapf	(??_LCDCommand+1)+0,f
  1618  05CE  0022               	movlb 2	; select bank2
  1619  05CF  080D               	movf	(269)^0100h,w	;volatile
  1620  05D0  0671               	xorwf	(??_LCDCommand+1)+0,w
  1621  05D1  39EF               	andlw	not (((1<<1)-1)<<4)
  1622  05D2  0671               	xorwf	(??_LCDCommand+1)+0,w
  1623  05D3  008D               	movwf	(269)^0100h	;volatile
  1624                           	line	25
  1625                           ;lcd44780.c: 25: LATBbits.LATB5 = (command & (1 << 5)) >> 5;
  1626  05D4  0872               	movf	(LCDCommand@command),w
  1627  05D5  00F0               	movwf	(??_LCDCommand+0)+0
  1628  05D6  3005               	movlw	05h
  1629  05D7                     u2455:
  1630  05D7  36F0               	lsrf	(??_LCDCommand+0)+0,f
  1631  05D8  0B89               	decfsz	wreg,f
  1632  05D9  2DD7               	goto	u2455
  1633  05DA  0870               	movf	0+(??_LCDCommand+0)+0,w
  1634  05DB  3901               	andlw	01h
  1635  05DC  00F1               	movwf	(??_LCDCommand+1)+0
  1636  05DD  0EF1               	swapf	(??_LCDCommand+1)+0,f
  1637  05DE  0DF1               	rlf	(??_LCDCommand+1)+0,f
  1638  05DF  080D               	movf	(269)^0100h,w	;volatile
  1639  05E0  0671               	xorwf	(??_LCDCommand+1)+0,w
  1640  05E1  39DF               	andlw	not (((1<<1)-1)<<5)
  1641  05E2  0671               	xorwf	(??_LCDCommand+1)+0,w
  1642  05E3  008D               	movwf	(269)^0100h	;volatile
  1643                           	line	26
  1644                           ;lcd44780.c: 26: LATBbits.LATB6 = (command & (1 << 6)) >> 6;
  1645  05E4  0872               	movf	(LCDCommand@command),w
  1646  05E5  00F0               	movwf	(??_LCDCommand+0)+0
  1647  05E6  3006               	movlw	06h
  1648  05E7                     u2465:
  1649  05E7  36F0               	lsrf	(??_LCDCommand+0)+0,f
  1650  05E8  0B89               	decfsz	wreg,f
  1651  05E9  2DE7               	goto	u2465
  1652  05EA  0870               	movf	0+(??_LCDCommand+0)+0,w
  1653  05EB  3901               	andlw	01h
  1654  05EC  00F1               	movwf	(??_LCDCommand+1)+0
  1655  05ED  0EF1               	swapf	(??_LCDCommand+1)+0,f
  1656  05EE  0DF1               	rlf	(??_LCDCommand+1)+0,f
  1657  05EF  0DF1               	rlf	(??_LCDCommand+1)+0,f
  1658  05F0  080D               	movf	(269)^0100h,w	;volatile
  1659  05F1  0671               	xorwf	(??_LCDCommand+1)+0,w
  1660  05F2  39BF               	andlw	not (((1<<1)-1)<<6)
  1661  05F3  0671               	xorwf	(??_LCDCommand+1)+0,w
  1662  05F4  008D               	movwf	(269)^0100h	;volatile
  1663                           	line	27
  1664                           ;lcd44780.c: 27: LATBbits.LATB7 = (command & (1 << 7)) >> 7;
  1665  05F5  0872               	movf	(LCDCommand@command),w
  1666  05F6  00F0               	movwf	(??_LCDCommand+0)+0
  1667  05F7  3007               	movlw	07h
  1668  05F8                     u2475:
  1669  05F8  36F0               	lsrf	(??_LCDCommand+0)+0,f
  1670  05F9  0B89               	decfsz	wreg,f
  1671  05FA  2DF8               	goto	u2475
  1672  05FB  0870               	movf	0+(??_LCDCommand+0)+0,w
  1673  05FC  3901               	andlw	01h
  1674  05FD  00F1               	movwf	(??_LCDCommand+1)+0
  1675  05FE  0CF1               	rrf	(??_LCDCommand+1)+0,f
  1676  05FF  0CF1               	rrf	(??_LCDCommand+1)+0,f
  1677  0600  080D               	movf	(269)^0100h,w	;volatile
  1678  0601  0671               	xorwf	(??_LCDCommand+1)+0,w
  1679  0602  397F               	andlw	not (((1<<1)-1)<<7)
  1680  0603  0671               	xorwf	(??_LCDCommand+1)+0,w
  1681  0604  008D               	movwf	(269)^0100h	;volatile
  1682                           	line	28
  1683                           	
  1684  0605                     l6978:	
  1685                           ;lcd44780.c: 28: LATBbits.LATB3 = 0; _delay((unsigned long)((100)*(1000000/4000000.0)));
                                  LATBbits.LATB3 = 1; _delay((unsigned long)((100)*(1000000/4000000.0)));
  1686  0605  118D               	bcf	(269)^0100h,3	;volatile
  1687                           	
  1688  0606                     l6980:	
  1689                           	opt asmopt_off
  1690  0606  3008               movlw	8
  1691  0607  00F0               movwf	(??_LCDCommand+0)+0,f
  1692  0608                     u2767:
  1693  0608  0BF0               decfsz	(??_LCDCommand+0)+0,f
  1694  0609  2E08               	goto	u2767
  1695                           opt asmopt_on
  1696                           
  1697                           	
  1698  060A                     l6982:	
  1699  060A  0022               	movlb 2	; select bank2
  1700  060B  158D               	bsf	(269)^0100h,3	;volatile
  1701                           	
  1702  060C                     l6984:	
  1703                           	opt asmopt_off
  1704  060C  3008               movlw	8
  1705  060D  00F0               movwf	(??_LCDCommand+0)+0,f
  1706  060E                     u2777:
  1707  060E  0BF0               decfsz	(??_LCDCommand+0)+0,f
  1708  060F  2E0E               	goto	u2777
  1709                           opt asmopt_on
  1710                           
  1711                           	line	30
  1712                           	
  1713  0610                     l6986:	
  1714                           ;lcd44780.c: 30: _delay((unsigned long)((100)*(1000000/4000000.0)));
  1715                           	opt asmopt_off
  1716  0610  3008               movlw	8
  1717  0611  00F0               movwf	(??_LCDCommand+0)+0,f
  1718  0612                     u2787:
  1719  0612  0BF0               decfsz	(??_LCDCommand+0)+0,f
  1720  0613  2E12               	goto	u2787
  1721                           opt asmopt_on
  1722                           
  1723                           	line	32
  1724                           	
  1725  0614                     l6988:	
  1726                           ;lcd44780.c: 32: LATBbits.LATB2 = 0;
  1727  0614  0022               	movlb 2	; select bank2
  1728  0615  110D               	bcf	(269)^0100h,2	;volatile
  1729                           	line	33
  1730                           	
  1731  0616                     l6990:	
  1732                           ;lcd44780.c: 33: _delay((unsigned long)((5)*(1000000/4000000.0)));
  1733                           		opt asmopt_off
  1734  0616  0064               	clrwdt
  1735                           	opt asmopt_on
  1736                           
  1737                           	line	35
  1738                           	
  1739  0617                     l6992:	
  1740                           ;lcd44780.c: 35: LATBbits.LATB4 = (command & (1 << 0)) >> 0;
  1741  0617  0872               	movf	(LCDCommand@command),w
  1742  0618  3901               	andlw	01h
  1743  0619  00F0               	movwf	(??_LCDCommand+0)+0
  1744  061A  0EF0               	swapf	(??_LCDCommand+0)+0,f
  1745  061B  0022               	movlb 2	; select bank2
  1746  061C  080D               	movf	(269)^0100h,w	;volatile
  1747  061D  0670               	xorwf	(??_LCDCommand+0)+0,w
  1748  061E  39EF               	andlw	not (((1<<1)-1)<<4)
  1749  061F  0670               	xorwf	(??_LCDCommand+0)+0,w
  1750  0620  008D               	movwf	(269)^0100h	;volatile
  1751                           	line	36
  1752                           	
  1753  0621                     l6994:	
  1754                           ;lcd44780.c: 36: LATBbits.LATB5 = (command & (1 << 1)) >> 1;
  1755  0621  0872               	movf	(LCDCommand@command),w
  1756  0622  3689               	lsrf	wreg,f
  1757  0623  3901               	andlw	01h
  1758  0624  00F0               	movwf	(??_LCDCommand+0)+0
  1759  0625  0EF0               	swapf	(??_LCDCommand+0)+0,f
  1760  0626  0DF0               	rlf	(??_LCDCommand+0)+0,f
  1761  0627  080D               	movf	(269)^0100h,w	;volatile
  1762  0628  0670               	xorwf	(??_LCDCommand+0)+0,w
  1763  0629  39DF               	andlw	not (((1<<1)-1)<<5)
  1764  062A  0670               	xorwf	(??_LCDCommand+0)+0,w
  1765  062B  008D               	movwf	(269)^0100h	;volatile
  1766                           	line	37
  1767                           	
  1768  062C                     l6996:	
  1769                           ;lcd44780.c: 37: LATBbits.LATB6 = (command & (1 << 2)) >> 2;
  1770  062C  0872               	movf	(LCDCommand@command),w
  1771  062D  00F0               	movwf	(??_LCDCommand+0)+0
  1772  062E  3002               	movlw	02h
  1773  062F                     u2485:
  1774  062F  36F0               	lsrf	(??_LCDCommand+0)+0,f
  1775  0630  0B89               	decfsz	wreg,f
  1776  0631  2E2F               	goto	u2485
  1777  0632  0870               	movf	0+(??_LCDCommand+0)+0,w
  1778  0633  3901               	andlw	01h
  1779  0634  00F1               	movwf	(??_LCDCommand+1)+0
  1780  0635  0EF1               	swapf	(??_LCDCommand+1)+0,f
  1781  0636  0DF1               	rlf	(??_LCDCommand+1)+0,f
  1782  0637  0DF1               	rlf	(??_LCDCommand+1)+0,f
  1783  0638  080D               	movf	(269)^0100h,w	;volatile
  1784  0639  0671               	xorwf	(??_LCDCommand+1)+0,w
  1785  063A  39BF               	andlw	not (((1<<1)-1)<<6)
  1786  063B  0671               	xorwf	(??_LCDCommand+1)+0,w
  1787  063C  008D               	movwf	(269)^0100h	;volatile
  1788                           	line	38
  1789                           	
  1790  063D                     l6998:	
  1791                           ;lcd44780.c: 38: LATBbits.LATB7 = (command & (1 << 3)) >> 3;
  1792  063D  0872               	movf	(LCDCommand@command),w
  1793  063E  00F0               	movwf	(??_LCDCommand+0)+0
  1794  063F  3003               	movlw	03h
  1795  0640                     u2495:
  1796  0640  36F0               	lsrf	(??_LCDCommand+0)+0,f
  1797  0641  0B89               	decfsz	wreg,f
  1798  0642  2E40               	goto	u2495
  1799  0643  0870               	movf	0+(??_LCDCommand+0)+0,w
  1800  0644  3901               	andlw	01h
  1801  0645  00F1               	movwf	(??_LCDCommand+1)+0
  1802  0646  0CF1               	rrf	(??_LCDCommand+1)+0,f
  1803  0647  0CF1               	rrf	(??_LCDCommand+1)+0,f
  1804  0648  080D               	movf	(269)^0100h,w	;volatile
  1805  0649  0671               	xorwf	(??_LCDCommand+1)+0,w
  1806  064A  397F               	andlw	not (((1<<1)-1)<<7)
  1807  064B  0671               	xorwf	(??_LCDCommand+1)+0,w
  1808  064C  008D               	movwf	(269)^0100h	;volatile
  1809                           	line	39
  1810                           	
  1811  064D                     l7000:	
  1812                           ;lcd44780.c: 39: LATBbits.LATB3 = 0; _delay((unsigned long)((100)*(1000000/4000000.0)));
                                  LATBbits.LATB3 = 1; _delay((unsigned long)((100)*(1000000/4000000.0)));
  1813  064D  118D               	bcf	(269)^0100h,3	;volatile
  1814                           	
  1815  064E                     l7002:	
  1816                           	opt asmopt_off
  1817  064E  3008               movlw	8
  1818  064F  00F0               movwf	(??_LCDCommand+0)+0,f
  1819  0650                     u2797:
  1820  0650  0BF0               decfsz	(??_LCDCommand+0)+0,f
  1821  0651  2E50               	goto	u2797
  1822                           opt asmopt_on
  1823                           
  1824                           	
  1825  0652                     l7004:	
  1826  0652  0022               	movlb 2	; select bank2
  1827  0653  158D               	bsf	(269)^0100h,3	;volatile
  1828                           	
  1829  0654                     l7006:	
  1830                           	opt asmopt_off
  1831  0654  3008               movlw	8
  1832  0655  00F0               movwf	(??_LCDCommand+0)+0,f
  1833  0656                     u2807:
  1834  0656  0BF0               decfsz	(??_LCDCommand+0)+0,f
  1835  0657  2E56               	goto	u2807
  1836                           opt asmopt_on
  1837                           
  1838                           	line	41
  1839                           	
  1840  0658                     l7008:	
  1841                           ;lcd44780.c: 41: _delay((unsigned long)((5)*(1000000/4000.0)));
  1842                           	opt asmopt_off
  1843  0658  30F9               movlw	249
  1844  0659  00F0               movwf	(??_LCDCommand+0)+0,f
  1845  065A                     u2817:
  1846  065A  2E5B               	nop2
  1847  065B  0BF0               decfsz	(??_LCDCommand+0)+0,f
  1848  065C  2E5A               	goto	u2817
  1849  065D  2E5E               	nop2	;nop
  1850  065E  2E5F               	nop2	;nop
  1851                           opt asmopt_on
  1852                           
  1853                           	line	42
  1854                           	
  1855  065F                     l3646:	
  1856  065F  0008               	return
  1857                           	opt stack 0
  1858                           GLOBAL	__end_of_LCDCommand
  1859  0660                     	__end_of_LCDCommand:
  1860 ;; =============== function _LCDCommand ends ============
  1861                           
  1862                           	signat	_LCDCommand,4216
  1863                           	global	___lwmod
  1864                           psect	text223,local,class=CODE,delta=2
  1865                           global __ptext223
  1866  053C                     __ptext223:
  1867                           
  1868 ;; *************** function ___lwmod *****************
  1869 ;; Defined at:
  1870 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  divisor         2    8[COMMON] unsigned int 
  1873 ;;  dividend        2   10[COMMON] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  counter         1   13[COMMON] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2    8[COMMON] unsigned int 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1885 ;;      Params:         4       0       0       0
  1886 ;;      Locals:         1       0       0       0
  1887 ;;      Temps:          1       0       0       0
  1888 ;;      Totals:         6       0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           psect	text223
  1898                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  1899                           	line	5
  1900                           	global	__size_of___lwmod
  1901  003E                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1902                           	
  1903  053C                     ___lwmod:	
  1904                           	opt	stack 15
  1905                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1906                           	line	8
  1907                           	
  1908  053C                     l6952:	
  1909  053C  0879               	movf	(___lwmod@divisor+1),w
  1910  053D  0478               	iorwf	(___lwmod@divisor),w
  1911  053E  1903               	skipnz
  1912  053F  2D41               	goto	u2381
  1913  0540  2D42               	goto	u2380
  1914  0541                     u2381:
  1915  0541  2D72               	goto	l6970
  1916  0542                     u2380:
  1917                           	line	9
  1918                           	
  1919  0542                     l6954:	
  1920  0542  01FD               	clrf	(___lwmod@counter)
  1921  0543  1403               	bsf	status,0
  1922  0544  0DFD               	rlf	(___lwmod@counter),f
  1923                           	line	10
  1924  0545  2D50               	goto	l6960
  1925                           	
  1926  0546                     l5356:	
  1927                           	line	11
  1928                           	
  1929  0546                     l6956:	
  1930  0546  3001               	movlw	01h
  1931                           	
  1932  0547                     u2395:
  1933  0547  35F8               	lslf	(___lwmod@divisor),f
  1934  0548  0DF9               	rlf	(___lwmod@divisor+1),f
  1935  0549  0B89               	decfsz	wreg,f
  1936  054A  2D47               	goto	u2395
  1937                           	line	12
  1938                           	
  1939  054B                     l6958:	
  1940  054B  3001               	movlw	(01h)
  1941  054C  00FC               	movwf	(??___lwmod+0)+0
  1942  054D  087C               	movf	(??___lwmod+0)+0,w
  1943  054E  07FD               	addwf	(___lwmod@counter),f
  1944  054F  2D50               	goto	l6960
  1945                           	line	13
  1946                           	
  1947  0550                     l5355:	
  1948                           	line	10
  1949                           	
  1950  0550                     l6960:	
  1951  0550  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  1952  0551  2D53               	goto	u2401
  1953  0552  2D54               	goto	u2400
  1954  0553                     u2401:
  1955  0553  2D46               	goto	l6956
  1956  0554                     u2400:
  1957  0554  2D56               	goto	l6962
  1958                           	
  1959  0555                     l5357:	
  1960  0555  2D56               	goto	l6962
  1961                           	line	14
  1962                           	
  1963  0556                     l5358:	
  1964                           	line	15
  1965                           	
  1966  0556                     l6962:	
  1967  0556  0879               	movf	(___lwmod@divisor+1),w
  1968  0557  027B               	subwf	(___lwmod@dividend+1),w
  1969  0558  1D03               	skipz
  1970  0559  2D5C               	goto	u2415
  1971  055A  0878               	movf	(___lwmod@divisor),w
  1972  055B  027A               	subwf	(___lwmod@dividend),w
  1973  055C                     u2415:
  1974  055C  1C03               	skipc
  1975  055D  2D5F               	goto	u2411
  1976  055E  2D60               	goto	u2410
  1977  055F                     u2411:
  1978  055F  2D65               	goto	l6966
  1979  0560                     u2410:
  1980                           	line	16
  1981                           	
  1982  0560                     l6964:	
  1983  0560  0878               	movf	(___lwmod@divisor),w
  1984  0561  02FA               	subwf	(___lwmod@dividend),f
  1985  0562  0879               	movf	(___lwmod@divisor+1),w
  1986  0563  3BFB               	subwfb	(___lwmod@dividend+1),f
  1987  0564  2D65               	goto	l6966
  1988                           	
  1989  0565                     l5359:	
  1990                           	line	17
  1991                           	
  1992  0565                     l6966:	
  1993  0565  3001               	movlw	01h
  1994                           	
  1995  0566                     u2425:
  1996  0566  36F9               	lsrf	(___lwmod@divisor+1),f
  1997  0567  0CF8               	rrf	(___lwmod@divisor),f
  1998  0568  0B89               	decfsz	wreg,f
  1999  0569  2D66               	goto	u2425
  2000                           	line	18
  2001                           	
  2002  056A                     l6968:	
  2003  056A  3001               	movlw	low(01h)
  2004  056B  02FD               	subwf	(___lwmod@counter),f
  2005  056C  1D03               	btfss	status,2
  2006  056D  2D6F               	goto	u2431
  2007  056E  2D70               	goto	u2430
  2008  056F                     u2431:
  2009  056F  2D56               	goto	l6962
  2010  0570                     u2430:
  2011  0570  2D72               	goto	l6970
  2012                           	
  2013  0571                     l5360:	
  2014  0571  2D72               	goto	l6970
  2015                           	line	19
  2016                           	
  2017  0572                     l5354:	
  2018                           	line	20
  2019                           	
  2020  0572                     l6970:	
  2021  0572  087B               	movf	(___lwmod@dividend+1),w
  2022  0573  01F9               	clrf	(?___lwmod+1)
  2023  0574  07F9               	addwf	(?___lwmod+1)
  2024  0575  087A               	movf	(___lwmod@dividend),w
  2025  0576  01F8               	clrf	(?___lwmod)
  2026  0577  07F8               	addwf	(?___lwmod)
  2027                           
  2028  0578  2D79               	goto	l5361
  2029                           	
  2030  0579                     l6972:	
  2031                           	line	21
  2032                           	
  2033  0579                     l5361:	
  2034  0579  0008               	return
  2035                           	opt stack 0
  2036                           GLOBAL	__end_of___lwmod
  2037  057A                     	__end_of___lwmod:
  2038 ;; =============== function ___lwmod ends ============
  2039                           
  2040                           	signat	___lwmod,8314
  2041                           	global	___lwdiv
  2042                           psect	text224,local,class=CODE,delta=2
  2043                           global __ptext224
  2044  057A                     __ptext224:
  2045                           
  2046 ;; *************** function ___lwdiv *****************
  2047 ;; Defined at:
  2048 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  divisor         2    0[COMMON] unsigned int 
  2051 ;;  dividend        2    2[COMMON] unsigned int 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  quotient        2    5[COMMON] unsigned int 
  2054 ;;  counter         1    7[COMMON] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2    0[COMMON] unsigned int 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2064 ;;      Params:         4       0       0       0
  2065 ;;      Locals:         3       0       0       0
  2066 ;;      Temps:          1       0       0       0
  2067 ;;      Totals:         8       0       0       0
  2068 ;;Total ram usage:        8 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           psect	text224
  2077                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  2078                           	line	5
  2079                           	global	__size_of___lwdiv
  2080  0046                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2081                           	
  2082  057A                     ___lwdiv:	
  2083                           	opt	stack 15
  2084                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2085                           	line	9
  2086                           	
  2087  057A                     l6926:	
  2088  057A  01F5               	clrf	(___lwdiv@quotient)
  2089  057B  01F6               	clrf	(___lwdiv@quotient+1)
  2090                           	line	10
  2091                           	
  2092  057C                     l6928:	
  2093  057C  0871               	movf	(___lwdiv@divisor+1),w
  2094  057D  0470               	iorwf	(___lwdiv@divisor),w
  2095  057E  1903               	skipnz
  2096  057F  2D81               	goto	u2311
  2097  0580  2D82               	goto	u2310
  2098  0581                     u2311:
  2099  0581  2DB8               	goto	l6948
  2100  0582                     u2310:
  2101                           	line	11
  2102                           	
  2103  0582                     l6930:	
  2104  0582  01F7               	clrf	(___lwdiv@counter)
  2105  0583  1403               	bsf	status,0
  2106  0584  0DF7               	rlf	(___lwdiv@counter),f
  2107                           	line	12
  2108  0585  2D90               	goto	l6936
  2109                           	
  2110  0586                     l5346:	
  2111                           	line	13
  2112                           	
  2113  0586                     l6932:	
  2114  0586  3001               	movlw	01h
  2115                           	
  2116  0587                     u2325:
  2117  0587  35F0               	lslf	(___lwdiv@divisor),f
  2118  0588  0DF1               	rlf	(___lwdiv@divisor+1),f
  2119  0589  0B89               	decfsz	wreg,f
  2120  058A  2D87               	goto	u2325
  2121                           	line	14
  2122                           	
  2123  058B                     l6934:	
  2124  058B  3001               	movlw	(01h)
  2125  058C  00F4               	movwf	(??___lwdiv+0)+0
  2126  058D  0874               	movf	(??___lwdiv+0)+0,w
  2127  058E  07F7               	addwf	(___lwdiv@counter),f
  2128  058F  2D90               	goto	l6936
  2129                           	line	15
  2130                           	
  2131  0590                     l5345:	
  2132                           	line	12
  2133                           	
  2134  0590                     l6936:	
  2135  0590  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  2136  0591  2D93               	goto	u2331
  2137  0592  2D94               	goto	u2330
  2138  0593                     u2331:
  2139  0593  2D86               	goto	l6932
  2140  0594                     u2330:
  2141  0594  2D96               	goto	l6938
  2142                           	
  2143  0595                     l5347:	
  2144  0595  2D96               	goto	l6938
  2145                           	line	16
  2146                           	
  2147  0596                     l5348:	
  2148                           	line	17
  2149                           	
  2150  0596                     l6938:	
  2151  0596  3001               	movlw	01h
  2152                           	
  2153  0597                     u2345:
  2154  0597  35F5               	lslf	(___lwdiv@quotient),f
  2155  0598  0DF6               	rlf	(___lwdiv@quotient+1),f
  2156  0599  0B89               	decfsz	wreg,f
  2157  059A  2D97               	goto	u2345
  2158                           	line	18
  2159  059B  0871               	movf	(___lwdiv@divisor+1),w
  2160  059C  0273               	subwf	(___lwdiv@dividend+1),w
  2161  059D  1D03               	skipz
  2162  059E  2DA1               	goto	u2355
  2163  059F  0870               	movf	(___lwdiv@divisor),w
  2164  05A0  0272               	subwf	(___lwdiv@dividend),w
  2165  05A1                     u2355:
  2166  05A1  1C03               	skipc
  2167  05A2  2DA4               	goto	u2351
  2168  05A3  2DA5               	goto	u2350
  2169  05A4                     u2351:
  2170  05A4  2DAB               	goto	l6944
  2171  05A5                     u2350:
  2172                           	line	19
  2173                           	
  2174  05A5                     l6940:	
  2175  05A5  0870               	movf	(___lwdiv@divisor),w
  2176  05A6  02F2               	subwf	(___lwdiv@dividend),f
  2177  05A7  0871               	movf	(___lwdiv@divisor+1),w
  2178  05A8  3BF3               	subwfb	(___lwdiv@dividend+1),f
  2179                           	line	20
  2180                           	
  2181  05A9                     l6942:	
  2182  05A9  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2183  05AA  2DAB               	goto	l6944
  2184                           	line	21
  2185                           	
  2186  05AB                     l5349:	
  2187                           	line	22
  2188                           	
  2189  05AB                     l6944:	
  2190  05AB  3001               	movlw	01h
  2191                           	
  2192  05AC                     u2365:
  2193  05AC  36F1               	lsrf	(___lwdiv@divisor+1),f
  2194  05AD  0CF0               	rrf	(___lwdiv@divisor),f
  2195  05AE  0B89               	decfsz	wreg,f
  2196  05AF  2DAC               	goto	u2365
  2197                           	line	23
  2198                           	
  2199  05B0                     l6946:	
  2200  05B0  3001               	movlw	low(01h)
  2201  05B1  02F7               	subwf	(___lwdiv@counter),f
  2202  05B2  1D03               	btfss	status,2
  2203  05B3  2DB5               	goto	u2371
  2204  05B4  2DB6               	goto	u2370
  2205  05B5                     u2371:
  2206  05B5  2D96               	goto	l6938
  2207  05B6                     u2370:
  2208  05B6  2DB8               	goto	l6948
  2209                           	
  2210  05B7                     l5350:	
  2211  05B7  2DB8               	goto	l6948
  2212                           	line	24
  2213                           	
  2214  05B8                     l5344:	
  2215                           	line	25
  2216                           	
  2217  05B8                     l6948:	
  2218  05B8  0876               	movf	(___lwdiv@quotient+1),w
  2219  05B9  01F1               	clrf	(?___lwdiv+1)
  2220  05BA  07F1               	addwf	(?___lwdiv+1)
  2221  05BB  0875               	movf	(___lwdiv@quotient),w
  2222  05BC  01F0               	clrf	(?___lwdiv)
  2223  05BD  07F0               	addwf	(?___lwdiv)
  2224                           
  2225  05BE  2DBF               	goto	l5351
  2226                           	
  2227  05BF                     l6950:	
  2228                           	line	26
  2229                           	
  2230  05BF                     l5351:	
  2231  05BF  0008               	return
  2232                           	opt stack 0
  2233                           GLOBAL	__end_of___lwdiv
  2234  05C0                     	__end_of___lwdiv:
  2235 ;; =============== function ___lwdiv ends ============
  2236                           
  2237                           	signat	___lwdiv,8314
  2238                           	global	_init_adc
  2239                           psect	text225,local,class=CODE,delta=2
  2240                           global __ptext225
  2241  049A                     __ptext225:
  2242                           
  2243 ;; *************** function _init_adc *****************
  2244 ;; Defined at:
  2245 ;;		line 63 in file "main.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;		None               void
  2252 ;; Registers used:
  2253 ;;		wreg, status,2
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2259 ;;      Params:         0       0       0       0
  2260 ;;      Locals:         0       0       0       0
  2261 ;;      Temps:          0       0       0       0
  2262 ;;      Totals:         0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           psect	text225
  2272                           	file	"main.c"
  2273                           	line	63
  2274                           	global	__size_of_init_adc
  2275  0010                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  2276                           	
  2277  049A                     _init_adc:	
  2278                           	opt	stack 15
  2279                           ; Regs used in _init_adc: [wreg+status,2]
  2280                           	line	64
  2281                           	
  2282  049A                     l6912:	
  2283                           ;main.c: 64: TRISAbits.TRISA5 = 1;
  2284  049A  0021               	movlb 1	; select bank1
  2285  049B  168C               	bsf	(140)^080h,5	;volatile
  2286                           	line	65
  2287                           	
  2288  049C                     l6914:	
  2289                           ;main.c: 65: ANSELA = 0b00010000;
  2290  049C  3010               	movlw	(010h)
  2291  049D  0023               	movlb 3	; select bank3
  2292  049E  008C               	movwf	(396)^0180h	;volatile
  2293                           	line	66
  2294                           	
  2295  049F                     l6916:	
  2296                           ;main.c: 66: ANSELB = 0x00;
  2297  049F  018D               	clrf	(397)^0180h	;volatile
  2298                           	line	67
  2299                           	
  2300  04A0                     l6918:	
  2301                           ;main.c: 67: FVRCON = 0b11000001;
  2302  04A0  30C1               	movlw	(0C1h)
  2303  04A1  0022               	movlb 2	; select bank2
  2304  04A2  0097               	movwf	(279)^0100h	;volatile
  2305                           	line	69
  2306                           	
  2307  04A3                     l6920:	
  2308                           ;main.c: 69: ADCON0 = 0b00010000;
  2309  04A3  3010               	movlw	(010h)
  2310  04A4  0021               	movlb 1	; select bank1
  2311  04A5  009D               	movwf	(157)^080h	;volatile
  2312                           	line	70
  2313                           	
  2314  04A6                     l6922:	
  2315                           ;main.c: 70: ADCON1 = 0b10000011;
  2316  04A6  3083               	movlw	(083h)
  2317  04A7  009E               	movwf	(158)^080h	;volatile
  2318                           	line	71
  2319                           	
  2320  04A8                     l6924:	
  2321                           ;main.c: 71: ADCON0bits.ADON = 1;
  2322  04A8  141D               	bsf	(157)^080h,0	;volatile
  2323                           	line	72
  2324                           	
  2325  04A9                     l1822:	
  2326  04A9  0008               	return
  2327                           	opt stack 0
  2328                           GLOBAL	__end_of_init_adc
  2329  04AA                     	__end_of_init_adc:
  2330 ;; =============== function _init_adc ends ============
  2331                           
  2332                           	signat	_init_adc,88
  2333                           	global	_init
  2334                           psect	text226,local,class=CODE,delta=2
  2335                           global __ptext226
  2336  04AA                     __ptext226:
  2337                           
  2338 ;; *************** function _init *****************
  2339 ;; Defined at:
  2340 ;;		line 27 in file "main.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;		None               void
  2347 ;; Registers used:
  2348 ;;		status,2
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2354 ;;      Params:         0       0       0       0
  2355 ;;      Locals:         0       0       0       0
  2356 ;;      Temps:          0       0       0       0
  2357 ;;      Totals:         0       0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           psect	text226
  2367                           	file	"main.c"
  2368                           	line	27
  2369                           	global	__size_of_init
  2370  001B                     	__size_of_init	equ	__end_of_init-_init
  2371                           	
  2372  04AA                     _init:	
  2373                           	opt	stack 15
  2374                           ; Regs used in _init: [status,2]
  2375                           	line	28
  2376                           	
  2377  04AA                     l6900:	
  2378                           ;main.c: 28: OSCCONbits.IRCF3 = 1;
  2379  04AA  0021               	movlb 1	; select bank1
  2380  04AB  1719               	bsf	(153)^080h,6	;volatile
  2381                           	line	29
  2382                           ;main.c: 29: OSCCONbits.IRCF2 = 0;
  2383  04AC  1299               	bcf	(153)^080h,5	;volatile
  2384                           	line	30
  2385                           ;main.c: 30: OSCCONbits.IRCF1 = 1;
  2386  04AD  1619               	bsf	(153)^080h,4	;volatile
  2387                           	line	31
  2388                           ;main.c: 31: OSCCONbits.IRCF0 = 1;
  2389  04AE  1599               	bsf	(153)^080h,3	;volatile
  2390                           	line	32
  2391                           ;main.c: 32: OSCCONbits.SCS0 = 0;
  2392  04AF  1019               	bcf	(153)^080h,0	;volatile
  2393                           	line	33
  2394                           ;main.c: 33: OSCCONbits.SCS1 = 1;
  2395  04B0  1499               	bsf	(153)^080h,1	;volatile
  2396                           	line	35
  2397                           	
  2398  04B1                     l6902:	
  2399                           ;main.c: 35: TRISA = 0x00;
  2400  04B1  018C               	clrf	(140)^080h	;volatile
  2401                           	line	36
  2402                           ;main.c: 36: TRISB = 0x00;
  2403  04B2  018D               	clrf	(141)^080h	;volatile
  2404                           	line	37
  2405                           ;main.c: 37: PORTA = 0x00;
  2406  04B3  0020               	movlb 0	; select bank0
  2407  04B4  018C               	clrf	(12)	;volatile
  2408                           	line	38
  2409                           ;main.c: 38: PORTB = 0x00;
  2410  04B5  018D               	clrf	(13)	;volatile
  2411                           	line	39
  2412                           ;main.c: 39: CM1CON0 = 0x00;
  2413  04B6  0022               	movlb 2	; select bank2
  2414  04B7  0191               	clrf	(273)^0100h	;volatile
  2415                           	line	40
  2416                           ;main.c: 40: CM2CON0 = 0x00;
  2417  04B8  0193               	clrf	(275)^0100h	;volatile
  2418                           	line	41
  2419                           	
  2420  04B9                     l6904:	
  2421                           ;main.c: 41: LCDCONbits.LCDEN = 0;
  2422  04B9  002F               	movlb 15	; select bank15
  2423  04BA  1391               	bcf	(1937)^0780h,7	;volatile
  2424                           	line	42
  2425                           	
  2426  04BB                     l6906:	
  2427                           ;main.c: 42: SRCON0bits.SRLEN = 0;
  2428  04BB  0022               	movlb 2	; select bank2
  2429  04BC  139A               	bcf	(282)^0100h,7	;volatile
  2430                           	line	43
  2431                           	
  2432  04BD                     l6908:	
  2433                           ;main.c: 43: CPSCON0bits.CPSON = 0;
  2434  04BD  0020               	movlb 0	; select bank0
  2435  04BE  139E               	bcf	(30),7	;volatile
  2436                           	line	44
  2437                           	
  2438  04BF                     l6910:	
  2439                           ;main.c: 44: APFCONbits.SSSEL = 1;
  2440  04BF  0022               	movlb 2	; select bank2
  2441  04C0  149D               	bsf	(285)^0100h,1	;volatile
  2442                           	line	45
  2443                           ;main.c: 45: LCDSE0 = 0x00;
  2444  04C1  002F               	movlb 15	; select bank15
  2445  04C2  0198               	clrf	(1944)^0780h	;volatile
  2446                           	line	46
  2447                           ;main.c: 46: LCDSE1 = 0x00;
  2448  04C3  0199               	clrf	(1945)^0780h	;volatile
  2449                           	line	47
  2450                           	
  2451  04C4                     l1819:	
  2452  04C4  0008               	return
  2453                           	opt stack 0
  2454                           GLOBAL	__end_of_init
  2455  04C5                     	__end_of_init:
  2456 ;; =============== function _init ends ============
  2457                           
  2458                           	signat	_init,88
  2459                           psect	text227,local,class=CODE,delta=2
  2460                           global __ptext227
  2461  0000                     __ptext227:
  2462                           	global	btemp
  2463  007E                     	btemp set 07Eh
  2464                           
  2465                           	DABS	1,126,2	;btemp
  2466                           	global	wtemp0
  2467  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Apr 11 14:07:49 2012

                   _RD 0CA8                     _WR 0CA9                    _GIE 005F                    wreg 0009  
      __end_of_LCDInit 053C                   l1822 04A9                   l1830 07E3                   l1831 07FD  
                 l1832 07FE                   l1833 07FE                   l1825 0727                   l1826 072A  
                 l1819 04C4                   l1827 072A                   l1828 072F                   l1829 07D8  
                 l7000 064D                   l7002 064E                   l7010 0661                   l7004 0652  
                 l3652 06FF                   l7020 06AC                   l7012 0664                   l3660 04F3  
                 l7100 07BC                   l3661 04E6                   l5350 05B7                   l3646 065F  
                 l7006 0654                   l7030 06C1                   l7022 06B0                   l7014 06A5  
                 l3662 04FE                   l7110 07CE                   l7102 07C0                   l5351 05BF  
                 l3663 04FE                   l3655 04D8                   l5344 05B8                   l5360 0571  
                 l7008 0658                   l7040 06F2                   l7032 06CC                   l7024 06B4  
                 l7016 06A6                   l3656 04C7                   l7112 07D4                   l7104 07C5  
                 l5345 0590                   l5361 0579                   l3649 053B                   l3657 04E0  
                 l5346 0586                   l5354 0572                   l7042 06F4                   l7034 06DD  
                 l7026 06B6                   l7018 06AA                   l7050 050C                   l3658 04CC  
                 l7114 07DE                   l7106 07C9                   l5347 0595                   l5355 0550  
                 l3659 04D2                   l5348 0596                   l5356 0546                   l7044 06F8  
                 l7036 06ED                   l7028 06B7                   l7060 052C                   l7052 0514  
                 l7116 07E3                   l7108 07CD                   l5349 05AB                   l5357 0555  
                 l5358 0556                   l7038 06EE                   l7062 0530                   l7054 0518  
                 l7046 04FF                   l7070 04D2                   l7118 07EE                   l5359 0565  
                 l7056 0520                   l7048 0508                   l7080 04EE                   l7072 04D7  
                 l7064 04C5                   l7058 0524                   l7082 04F3                   l7066 04C7  
                 l7074 04D8                   l7090 0716                   l7068 04CC                   l7076 04E0  
                 l7092 0719                   l7084 0700                   l7078 04E6                   l7094 071D  
                 l7086 0703                   l7096 0727                   l7088 070E                   l7098 072F  
                 l6900 04AA                   l6910 04BF                   l6902 04B1                   l6904 04B9  
                 l6920 04A3                   l6912 049A                   l6906 04BB                   l6922 04A6  
                 l6914 049C                   l6930 0582                   l6908 04BD                   l6924 04A8  
                 l6916 049F                   l6940 05A5                   l6932 0586                   l6918 04A0  
                 l6950 05BF                   l6942 05A9                   l6934 058B                   l6926 057A  
                 l6944 05AB                   l6936 0590                   l6928 057C                   l6960 0550  
                 l6952 053C                   l6946 05B0                   l6938 0596                   l6962 0556  
                 l6954 0542                   l6970 0572                   l6948 05B8                   l6972 0579  
                 l6964 0560                   l6956 0546                   l6980 0606                   l6966 0565  
                 l6958 054B                   l6990 0616                   l6982 060A                   l6974 05C1  
                 l6968 056A                   l6992 0617                   l6984 060C                   l6976 05C4  
                 l6994 0621                   l6986 0610                   l6978 0605                   l6996 062C  
                 l6988 0614                   l6998 063D                   STR_1 0006                   u2310 0582  
                 u2311 0581                   u2400 0554                   u2401 0553                   u2330 0594  
                 u2410 0560                   u2331 0593                   u2411 055F                   u2325 0587  
                 u2350 05A5                   u2430 0570                   u2351 05A4                   u2431 056F  
                 u2415 055C                   u2345 0597                   u2425 0566                   u2505 0667  
                 u2370 05B6                   u2371 05B5                   u2355 05A1                   u2515 0677  
                 u2380 0542                   u2365 05AC                   u2381 0541                   u2445 05C7  
                 u2525 0687                   u2455 05D7                   u2535 0698                   u2607 0706  
                 u2560 04FD                   u2465 05E7                   u2545 06CF                   u2561 04FC  
                 u2617 0711                   u2570 072E                   u2395 0547                   u2475 05F8  
                 u2555 06E0                   u2707 06A8                   u2627 07F5                   u2571 072D  
                 u2580 07D4                   u2485 062F                   u2717 06AE                   u2637 0503  
                 u2581 07D3                   u2590 07DE                   u2807 0656                   u2495 0640  
                 u2727 06B2                   u2647 050E                   u2591 07DD                   u2817 065A  
                 u2737 06F0                   u2657 0516                   u2747 06F6                   u2667 051E  
                 u2757 06FA                   u2677 0526                   u2767 0608                   u2687 052E  
                 u2777 060E                   u2697 0536                   u2787 0612                   u2797 0650  
                 _WREN 0CAA  LCDWriteText@address_d 0078                   _main 0700                   _init 04AA  
                 fsr0h 0005                   fsr0l 0004                   indf0 0000                   btemp 007E  
                 start 0002          ?_LCDWriteText 0073       __end_of_LCDWrite 0700                  ?_main 0070  
                ?_init 0070                  _ADRES 009B                  _EEADR 0191                  _CARRY 0018  
      __end_of___lwdiv 05C0        __end_of___lwmod 057A                  _PORTA 000C                  _PORTB 000D  
                _TRISA 008C                  _TRISB 008D    __size_of_LCDCommand 00A0           main@tempText 0024  
                status 0003                  wtemp0 007E           __end_of_main 0800           __end_of_init 04C5  
       ??_LCDWriteText 0077       main@ADCresultDec 0023                 ??_main 0020                 ??_init 0070  
            ??_LCDInit 0073                 _ADCON0 009D                 _ADCON1 009E                 _EEDATA 0193  
               _EECON1 0195                 _EECON2 0196                 _ANSELA 018C                 _ANSELB 018D  
               _LCDSE0 0798                 _LCDSE1 0799                 _FVRCON 0117              ??___lwdiv 0074  
            ??___lwmod 007C       __end_of_init_adc 04AA              ?_LCDWrite 0070           ??_LCDCommand 0070  
       __pcstackCOMMON 0070     __end_of_LCDCommand 0660   __end_of_LCDWriteText 04FF             ??_LCDWrite 0070  
           __pmaintext 0700                _CM1CON0 0111                _CM2CON0 0113                _LCDInit 04FF  
           __stringtab 0005              ?_init_adc 0070                ___lwdiv 057A                ___lwmod 053C  
 end_of_initialization 0497             ??_init_adc 0070              _TRISAbits 008C  __size_of_LCDWriteText 003A  
    __size_of_LCDWrite 00A0           _LCDWriteText 04C5    start_initialization 0497               ?_LCDInit 0070  
        __pcstackBANK0 0020       LCDWrite@inputChr 0072      __size_of_init_adc 0010       ___lwdiv@dividend 0072  
            __ptext220 04FF              __ptext221 0660              __ptext222 05C0              __ptext223 053C  
            __ptext224 057A              __ptext225 049A              __ptext226 04AA              __ptext218 0000  
            __ptext227 0000              __ptext219 04C5               ?___lwdiv 0070               ?___lwmod 0078  
            __pstrings 0005            _CPSCON0bits 001E      LCDCommand@command 0072       ___lwdiv@quotient 0075  
             _LATBbits 010D               _LCDWrite 0660       LCDWriteText@text 0073             _ADCON0bits 009D  
     __size_of_LCDInit 003D             _APFCONbits 011D       __size_of___lwdiv 0046       __size_of___lwmod 003E  
      ___lwdiv@divisor 0070        ___lwdiv@counter 0077             _LCDCONbits 0791               _init_adc 049A  
        __size_of_main 0100          __size_of_init 001B        LCDWriteText@col 0076        LCDWriteText@row 0075  
           _LCDCommand 05C0          main@ADCresult 002D       ___lwmod@dividend 007A             _OSCCONbits 0099  
      ___lwmod@divisor 0078        ___lwmod@counter 007D             _SRCON0bits 011A            ?_LCDCommand 0070  
